{"version":3,"sources":["common/TypeCommon.ts","common/ActionCommon.ts","common/ConfigCommon.ts","common/EventCommont.ts","common/index.ts","common/PacketCommon.ts","util/CommonUtils.ts","Api.ts","action/AppActions.ts","socket/index.ts","action/NavigationActions.ts","util/StringUtils.ts","util/index.ts","component/AvatarComponent.tsx","component/PopupConfirmComponent.tsx","component/PopupUserInfoComponent.tsx","component/ContentChatHeaderComponent.tsx","component/ContentChatControlComponent.tsx","component/ContentChatMessagesComponent.tsx","component/ContentChatComponent.tsx","component/PopupSearchUserComponent.tsx","component/PopupSettingComponent.tsx","component/DropdownSettingComponent.tsx","action/UserActions.ts","component/PopupProfileComponents.tsx","component/ContentHeaderComponent.tsx","component/ContentFooterComponent.tsx","component/DropdownConversationComponent.tsx","component/ItemConversation.tsx","component/ContentConversationComponent.tsx","component/ListRequestComponent.tsx","component/ListPeopleComponent.tsx","component/ContentPeopleComponent.tsx","component/ContentBodyComponent.tsx","component/ToastsComponent.tsx","container/HomeContainer.tsx","action/FriendActions.ts","action/FriendRequestActions.ts","action/ChatroomActions.ts","action/MessageActions.ts","action/TypingAction.ts","container/LoginContainer.tsx","container/VerificationContainer.tsx","router/ContainerRouter.tsx","router/AuthRouter.tsx","component/ToastItemComponent.tsx","component/ToastContainComponent.tsx","component/PopupContainComponent.tsx","component/DropdownContainComponent.tsx","App.tsx","reducer/UserReducer.ts","reducer/AppReducer.ts","reducer/NavigationReducer.ts","reducer/FriendReducer.ts","reducer/FriendRequestReducer.ts","reducer/ChatroomReducer.ts","reducer/MessageReducer.ts","reducer/TypingReducer.ts","reducer/index.ts","Store.ts","i18n.ts","index.tsx"],"names":["ELoginViewType","EContentTap","EPeopleTap","EViewType","EConversationType","LOGIN","REGISTER","VERIFY","UPDATE_USER_DATA","CLEAN_USER_DATA","LOGOUT","TOKEN","FRIEND_GET","FRIEND_SETNICKNAME","FRIEND_REMOVE","FRIEND_PUSH","FRIEND_POP","FRIEND_SENDFRIENDREQUEST","FRIEND_ACCEPTFRIENDREQUEST","FRIEND_REFUSEFRIENDREQUEST","FRIEND_CANCELFRIENDREQUEST","FRIEND_UPDATE_DATA","FRIENDREQUEST_GET","FRIENDREQUEST_PUSH_RECEVICE","FRIENDREQUEST_PUSH_SENT","FRIENDREQUEST_POP_RECEVICE","FRIENDREQUEST_POP_SENT","CHATROOM_CREATE","CHATROOM_UNFOLLOW","CHATROOM_INVITE","CHATROOM_GETALLUSERCHATROOMS","CHATROOM_UPDATE","INITIALIZE","PUSH_TOAST","TOGGLE_SOUND","SET_VIEW_TYPE","SET_UNREAD_STATE","TOGGLE_NOTIFICATION","CLOSE_POPUP","OPEN_POPUP","CLOSE_DIALOG","OPEN_DIALOG","MESSAGE_GET","MESSAGE_RECEIVE","TYPING","CHOOSE_CONTENT_TAB","CHOOSE_PEOPLE_TAB","NAVIGATOR_SET_CHATROOM","SET_CONVERSATION_VIEW","HOST","PORT","API","APP_NAME","common","event","USER","GET","PROFILE","PUT","REMOVE","FRIEND","SETNICKNAME","GETFRIENDREQUEST","SENDFRIENDREQUEST","ACCEPTFRIENDREQUEST","REFUSEFRIENDREQUEST","CANCELFRIENDREQUEST","RECEIVEFRIENDREQUEST","REMOVEFRIENDREQUEST","ONACCEPTFRIENDREQUEST","ONREMOVEFRIEND","CHATROOM","CREATE","UNFOLLOW","INVITE","GETALLUSERCHATROOMS","MASK_AS_READ","MASK_AS_UNREAD","SET_ARCHIVE","SET_BLOCK","SEND_TYPING","UPDATE","MESSAGE","SEND","RECEIVE","packet","AUTH","action","config","type","responseFormat","response","data","success","status","undefined","validateEmail","email","test","String","toLowerCase","changeFAVIcon","src","head","document","getElementsByTagName","link","createElement","oldLink","getElementById","id","rel","href","removeChild","appendChild","headers","option","Object","assign","getHeaders","register","payload","a","axios","post","token","authorization","localStorage","setItem","login","password","verify","uuid","resendVerify","logout","removeItem","uploadAvatar","pushToast","closePopup","openRecent","openPopup","openDropdown","content","position","Socket","socket","this","deviceId","socketClusterClient","create","hostname","secure","port","query","window","listener","once","then","isAuthenticated","console","log","reason","closeAllChannels","oldAuthToken","authToken","signedAuthToken","oldSignedAuthToken","error","code","channel","newChannelState","oldChannelState","subscriptionOptions","message","instance","ins","chooseContentTab","tab","dispatch","choosePeopleTab","setChatroomNavigation","milisecondsToDigital","duration","format","milliseconds","seconds","Math","floor","minutes","hours","replace","milisecondsToTimeString","trim","roundTime","unit","day","hour","minute","second","capitalize","text","split","map","string","charAt","toUpperCase","slice","join","zeroPad","number","width","z","n","toString","length","Array","util","AvatarComponent","url","online","size","className","onClick","style","cursor","alt","height","Badge","variant","Date","now","lastOnlineTime","getTime","connect","buttons","o","i","Button","primary","func","key","title","timeOut","friend","friendRequest","user","chatroom","form","lastName","firstName","avatar","_id","nickname","requestSent","sent","find","from","to","every","InputGroup","FormControl","placeholder","defaultValue","aria-label","aria-describedby","onChange","value","target","sc","getSocket","clearTimeout","setTimeout","transmit","evt","friendId","Append","Text","CONVERSATION","chatroomData","friendsChatroom","users","requestId","userId","body","navigation","chatroomId","friendsData","oo","chatroomName","name","activeTime","avtUrl","useState","onTyping","setOnTyping","setText","sendTyping","typing","sendRead","myChatroom","read","userChatroomId","onSubmit","preventDefault","Form","onFocus","onBlur","timeout","ItemChatMessagesComponent","preData","nextData","isMine","isMidChat","isEndChat","isTopChat","isAloneChat","ItemChatTypingComponent","typingData","show","some","setUpdate","loading","setLoading","addEventListener","random","innerHeight","useEffect","chatArea","topOffset","scrollTop","skip","messageData","Spinner","animation","ContentChatComponent","Component","PopupSearchUserComponent","setUsers","onSearch","setOnSearch","Prepend","invoke","Item","app","toggleNotification","state","JSON","stringify","toggleSound","sound","notification","Check","label","defaultChecked","api","disconnect","setConversationViewType","header","btnRight","NORMAL","ARCHIVE","BLOCK","updateUserData","view","setView","setError","dragEnter","setDragEnter","uploadImageData","setUploadImageData","uploadImage","setUploadImage","setFirstName","setLastName","setPassword","confirmPassword","setConfirmPassword","oldPassword","setOldPassword","resetState","onClickDone","time","catch","err","formData","FormData","append","multiple","onDragEnter","onDragLeave","file","files","reader","FileReader","readAsDataURL","onload","result","left","readOnly","mapDispatchToProps","contentTab","rect","getBoundingClientRect","DropdownSettingComponent","x","viewType","WINDOW","y","bottom","fontSize","PEOPLE","archive","block","lastMessage","hover","setHover","active","showTyping","tu","updateTime","tn","tdisplay","getDate","getHours","getMinutes","getMonth","msgPrefix","conversationView","onMouseOver","onMouseLeave","visibility","search","setSearch","listArea","scrollHeight","clientHeight","chatroomFilter","filter","RegExp","ItemConversation","ItemRequestComponent","receive","friendsOnline","friendsOffline","peopleTab","REQUEST","ToastFriendRequestComponent","ToastFriendAcceptComponent","interval","HomeContainer","props","socketHandle","bind","getSocketData","cleanUserData","init","updateFriendData","receiver","popReceiveRequest","popSentRequest","pushReceiveRequest","pushSentRequest","pushFriend","popFriend","updateChatroom","setTyping","MOBILE","receiveMessage","Audio","play","getFriend","setFriendNickName","getFriendRequest","getAllChatrooms","createChatroom","unfollowChatroom","getMessages","unreadChatroom","setInterval","LoginContainer","emailRef","passwordRef","confirmpasswordRef","firstNameRef","lastNameRef","SIGNIN","isEmailFail","isPasswordFail","isConfirmPasswordFail","isFirstNameFail","isLastNameFail","React","createRef","onChangeEmail","onChangeFirstName","onChangeLastName","onChangePassword","onChangeComfirmPassword","onBlurEmail","onBlurPassword","onBlurConfirmPassword","onBlurFirstName","onBlurLastName","onClickSetViewType","onLoginSubmit","setState","check","SIGNUP","ButtonGroup","Group","controlId","Control","ref","Overlay","placement","Tooltip","VerificationContainer","verifying","onClickResend","location","pathname","emailVerify","verified","path","exact","mapDispatchToState","fail","setFail","ToastItemComponent","autohide","setShow","onHorver","setOnHorver","timeSpace","timeString","timeAgo","Toast","_","isFunction","onClose","onMouseEnter","delay","isNumber","Body","ToastContainComponent","elements","nextProps","toast","popup","Modal","onHide","dialogClassName","centered","btnLeft","closeDialog","dropdown","top","App","update","getItem","initialize","setAppViewType","innerWidth","uuidv4","lang","soundData","parse","notificationData","initialized","initializeState","reducer","combineReducers","popupBackup","values","includes","isArray","nstate","friendIndex","findIndex","splice","isString","isEqual","allKeys","index","sort","b","chatroomIds","Set","unshift","messages","concat","createdTime","push","store","createStore","applyMiddleware","thunk","subscribe","getState","i18n","use","Backend","LanguageDetector","initReactI18next","fallbackLng","interpolation","escapeValue","Context","fallback","ReactDom","render"],"mappings":"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","file":"static/js/main.bb0c4b7e.chunk.js","sourcesContent":["export enum ELoginViewType {\n    SIGNIN = 'SIGNIN',\n    SIGNUP = 'SIGNUP'\n}\n\nexport enum EContentTap {\n    CONVERSATION = 'CHAT',\n    PEOPLE = 'PEOPLE'\n}\n\nexport enum EPeopleTap {\n    PEOPLE = 'PEOPLE',\n    REQUEST = 'REQUEST'\n}\n\nexport enum EViewType {\n    WINDOW = \"WINDOW\",\n    MOBILE = \"MOBILE\"\n}\n\nexport enum EConversationType {\n    NORMAL = \"NORMAL\",\n    ARCHIVE = \"ARCHIVE\",\n    BLOCK = \"BLOCK\",\n}","/* __USER__ */\nexport const LOGIN = \"LOGIN\"\nexport const REGISTER = \"REGISTER\"\nexport const VERIFY = \"VERIFY\"\nexport const UPDATE_USER_DATA = \"UPDATE_USER_DATA\"\nexport const CLEAN_USER_DATA = \"CLEAN_USER_DATA\"\nexport const LOGOUT = \"LOGOUT\"\nexport const TOKEN = \"TOKEN\"\n\n/* __FRIEND__ */\nexport const FRIEND_GET = \"FRIEND_GET\"\nexport const FRIEND_SETNICKNAME = \"FRIEND_SETNICKNAME\"\nexport const FRIEND_REMOVE = \"FRIEND_REMOVE\"\nexport const FRIEND_PUSH = \"FRIEND_PUSH\"\nexport const FRIEND_POP = \"FRIEND_POP\"\nexport const FRIEND_SENDFRIENDREQUEST = \"FRIEND_SENDFRIENDREQUEST\"\nexport const FRIEND_ACCEPTFRIENDREQUEST = \"FRIEND_ACCEPTFRIENDREQUEST\"\nexport const FRIEND_REFUSEFRIENDREQUEST = \"FRIEND_REFUSEFRIENDREQUEST\"\nexport const FRIEND_CANCELFRIENDREQUEST = \"FRIEND_CANCELFRIENDREQUEST\"\nexport const FRIEND_UPDATE_DATA = \"FRIEND_UPDATE_DATA\"  //Call while transmit\n\n/* __FRIEND_REQUEST__ */\nexport const FRIENDREQUEST_GET = 'FRIENDREQUEST_GET'\nexport const FRIENDREQUEST_PUSH_RECEVICE = 'FRIENDREQUEST_PUSH_RECEVICE'\nexport const FRIENDREQUEST_PUSH_SENT = 'FRIENDREQUEST_PUSH_SENT'\nexport const FRIENDREQUEST_POP_RECEVICE = 'FRIENDREQUEST_POP_RECEVICE'\nexport const FRIENDREQUEST_POP_SENT = 'FRIENDREQUEST_POP_SENT'\n\n/* __FRIEND_REQUEST__ */\nexport const CHATROOM_CREATE = \"CHATROOM_CREATE\"\nexport const CHATROOM_UNFOLLOW = \"CHATROOM_UNFOLLOW\"\nexport const CHATROOM_INVITE = \"CHATROOM_INVITE\"\nexport const CHATROOM_GETALLUSERCHATROOMS = \"CHATROOM_GETALLUSERCHATROOMS\"\nexport const CHATROOM_UPDATE = \"CHATROOM_UPDATE\"\n\n/* __APP_DATA__ */\nexport const INITIALIZE = \"INITIALIZE\"\nexport const PUSH_TOAST = \"PUSH_TOAST\"\nexport const TOGGLE_SOUND = \"TOGGLE_SOUND\"\nexport const SET_VIEW_TYPE = \"SET_VIEW_TYPE\"\nexport const SET_UNREAD_STATE = \"SET_UNREAD_STATE\"\nexport const TOGGLE_NOTIFICATION = \"TOGGLE_NOTIFICATION\"\nexport const CLOSE_POPUP = \"CLOSE_POPUP\"\nexport const OPEN_POPUP = \"OPEN_POPUP\"\nexport const CLOSE_DIALOG = \"CLOSE_DIALOG\"\nexport const OPEN_DIALOG = \"OPEN_DIALOG\"\n\n/* __MESSAGE__ */\nexport const MESSAGE_GET = \"MESSAGE_GET\"\nexport const MESSAGE_RECEIVE = \"MESSAGE_RECEIVE\"\n\n/* __TYPING__ */\nexport const TYPING = \"TYPING\"\n\n/* __NAVIGATION__ */\nexport const CHOOSE_CONTENT_TAB = \"CHOOSE_CONTENT_TAB\"\nexport const CHOOSE_PEOPLE_TAB = \"CHOOSE_PEOPLE_TAB\"\nexport const NAVIGATOR_SET_CHATROOM = \"NAVIGATOR_SET_CHATROOM\"\nexport const SET_CONVERSATION_VIEW = \"SET_CONVERSATION_VIEW\"","// export const HOST = \"localhost\"\n// export const HOST = \"192.168.31.245\"\n// export const HOST = \"192.168.1.2\"\nexport const HOST = \"5.181.217.57\"\nexport const PORT = 3000\nexport const API = \"api.messengerplane.tk\"\nexport const APP_NAME = \"Messenger\"","const event = {\n    USER: {\n        GET: \"get\",\n    },\n    PROFILE: {\n        GET: \"get\",\n        PUT: \"put\",\n        REMOVE: \"remove\",\n    },\n    FRIEND: {\n        GET: \"get\",\n        SETNICKNAME: \"setNickName\",\n        REMOVE: \"remove\",\n        GETFRIENDREQUEST: \"getFriendRequest\",\n        SENDFRIENDREQUEST: \"sendFriendRequest\",\n        ACCEPTFRIENDREQUEST: \"acceptFriendRequest\",\n        REFUSEFRIENDREQUEST: \"refuseFriendRequest\",\n        CANCELFRIENDREQUEST: \"cancelFriendRequest\",\n        // TRAMSMIT EVENT\n        RECEIVEFRIENDREQUEST: \"receiveFriendRequest\",\n        REMOVEFRIENDREQUEST: \"removeFriendRequest\",\n        ONACCEPTFRIENDREQUEST: \"onAcceptFriendRequest\",\n        ONREMOVEFRIEND: \"onRemoveFriend\",\n    },\n    CHATROOM: {\n        CREATE: \"create\",\n        UNFOLLOW: \"unfollow\",\n        INVITE: \"invite\",\n        GETALLUSERCHATROOMS: \"getAllUserChatrooms\",\n        MASK_AS_READ: \"maskAsRead\",\n        MASK_AS_UNREAD: \"maskAsUnread\",\n        SET_ARCHIVE: \"setArchive\",\n        SET_BLOCK: \"setBlock\",\n        SEND_TYPING: \"sendTyping\",\n        // TRAMSMIT EVENT\n        UPDATE: \"update\",\n    },\n    MESSAGE: {\n        GET: \"get\",\n        SEND: \"send\",\n        // TRAMSMIT EVENT\n        RECEIVE: \"receive\"\n    },\n}\n\nexport default event;","import * as action from \"./ActionCommon\";\nimport * as config from \"./ConfigCommon\";\nimport * as type from \"./TypeCommon\";\nimport event from \"./EventCommont\";\nimport packet from \"./PacketCommon\";\n\nconst common = {\n    event,\n    packet,\n    action,\n    config,\n    type\n}\n\nexport default common;","const packet = {\n    // Transmit data\n    AUTH: \"AUTH\",\n    PROFILE: \"PROFILE\",\n    USER: \"USER\",\n    FRIEND: \"FRIEND\",\n    CHATROOM: \"CHATROOM\",\n    MESSAGE: \"MESSAGE\",\n    // Transmit to an orther user\n    FRIEND_UPDATE_DATA: \"FRIEND_UPDATE_DATA\",\n}\n\nexport default packet","import { AxiosResponse } from \"axios\";\nimport { IResponseData } from \"../interface/DataInterface\";\nimport _ from \"underscore\";\n\nexport function responseFormat(response?: AxiosResponse): IResponseData {\n    return response?.data || { success: false, status: undefined, data: undefined }\n}\n\nexport function validateEmail(email: string) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nexport function changeFAVIcon(src: string) {\n    let head = document.head || document.getElementsByTagName('head')[0];\n\n    var link = document.createElement('link'),\n        oldLink = document.getElementById('dynamic-favicon');\n    link.id = 'dynamic-favicon';\n    link.rel = 'shortcut icon';\n    link.href = src;\n    if (oldLink) {\n        head.removeChild(oldLink);\n    }\n    head.appendChild(link);\n}","import axios from \"axios\";\nimport common from \"./common\";\nimport { responseFormat } from \"./util/CommonUtils\";\n\n// const HOST = `http://${common.config.HOST}:${common.config.PORT}`\nconst HOST = `https://${common.config.API}`;\n\nlet headers: { [key in string]: string } = {};\n\n/* __SUPPPORT__ */\nexport function initialize() {\n    // Token\n    let token = localStorage.getItem('socketcluster.authToken');\n    if (token) headers = Object.assign(headers, { authorization: `Bearer ${token}` })\n}\n\nexport function config(option: { [key in string]: string }) {\n    headers = Object.assign(headers, option)\n}\n\nexport function getHeaders() {\n    return headers;\n}\n\n/* __API__ */\nexport async function register(payload: { email: string, password: string, confirmPassword: string, firstName: string, lastName: string }) {\n    // Request\n    let response = await axios.post(`${HOST}/auth/register`, payload, { headers });\n    // Format data\n    let data = responseFormat(response);\n    // Save token\n    if (data.success) {\n        // Get token\n        let token = data.data.authorization;\n        // Asign token\n        headers = Object.assign(headers, { authorization: `Bearer ${token}` })\n        // Save token\n        localStorage.setItem('socketcluster.authToken', token);\n    }\n\n    return data;\n}\n\nexport async function login(email: string, password: string) {\n    // Request\n    let response = await axios.post(`${HOST}/auth/login`, { email, password }, { headers });\n    // Format data\n    let data = responseFormat(response);\n    // Save token\n    if (data.success) {\n        // Get token\n        let token = data.data.authorization;\n        // Asign token\n        headers = Object.assign(headers, { authorization: `Bearer ${token}` })\n        // Save token\n        localStorage.setItem('socketcluster.authToken', token);\n    }\n\n    return data;\n}\n\nexport async function token() {\n    // Request\n    let response = await axios.post(`${HOST}/auth/token`, {}, { headers });\n    // Format data\n    let data = responseFormat(response);\n    // Check token exist or expired\n    if (!data.success) {    // If success fail remove header authorization and localstorage\n        headers = Object.assign(headers, { authorization: '' })\n        // localStorage.removeItem('socketcluster.authToken')\n    }\n\n    return data;\n}\n\nexport async function verify(uuid: string) {\n    // Request\n    let response = await axios.post(`${HOST}/auth/verify`, { uuid }, { headers });\n    return responseFormat(response);;\n}\n\nexport async function resendVerify() {\n    // Request\n    let response = await axios.post(`${HOST}/auth/resendVerify`, {}, { headers });\n    return responseFormat(response);;\n}\n\nexport async function logout() {\n    // Request\n    let response = await axios.post(`${HOST}/auth/logout`, {}, { headers });\n    // Format data\n    let data = responseFormat(response);\n    // Handle\n    if (data.success) {\n        headers = Object.assign(headers, { authorization: '' })\n        localStorage.removeItem('socketcluster.authToken')\n    }\n    return data;\n}\n\nexport async function getUser() {\n    let response = await axios.get(`${HOST}/user`, { headers });\n    return responseFormat(response);\n}\n\nexport async function uploadAvatar(payload: FormData) {\n    // Request\n    let response = await axios.post(`${HOST}/upload/avatar`, payload, { headers });\n    // Format data\n    let data = responseFormat(response);\n    // Return\n    return data;\n}","import common from \"../common\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport * as api from \"../Api\";\nimport { IToastItemProps, IPopupProps } from \"../interface/ComponentInterface\";\nimport { EViewType } from \"../common/TypeCommon\";\nimport { IMessageData, IChatroomReducerData } from \"../interface/DataInterface\";\nimport { type } from \"os\";\n\nexport function initialize() {\n    /* __Device Id__ */\n    let deviceId = localStorage.getItem('deviceId');\n    // Check deviceId exist\n    if (!deviceId) {\n        deviceId = uuidv4();\n        localStorage.setItem('deviceId', deviceId);\n    }\n\n    /* __Language__ */\n    let lang = localStorage.getItem('lang');\n    // Check deviceId exist\n    if (!lang) {\n        lang = \"en\";\n        localStorage.setItem('lang', lang);\n    }\n\n    /* __Sound__ */\n    let soundData = localStorage.getItem('sound');\n    let sound = soundData ? JSON.parse(soundData) : true\n    // Check deviceId exist\n    if (!soundData) {\n        sound = true;\n        localStorage.setItem('sound', JSON.stringify(sound));\n    }\n\n    /* __Notification__ */\n    let notificationData = localStorage.getItem('notification');\n    let notification = notificationData ? JSON.parse(notificationData) : true\n    // Check deviceId exist\n    if (!notificationData) {\n        notification = true;\n        localStorage.setItem('notification', JSON.stringify(notification));\n    }\n\n    /* __API_CONFIG__ */\n    api.config({ \"deviceId\": deviceId })\n    api.config({ \"accept-language\": lang })\n\n    return {\n        type: common.action.INITIALIZE,\n        payload: {\n            initialized: true,\n            deviceId,\n            lang,\n            sound,\n            notification\n        },\n    }\n}\n\nexport function setAppViewType(type: EViewType) {\n    return {\n        type: common.action.SET_VIEW_TYPE,\n        payload: type\n    }\n}\n\nexport function setUnreadChatroom(state: boolean) {\n    return {\n        type: common.action.SET_UNREAD_STATE,\n        payload: state\n    }\n}\n\nexport function toggleSound(state: boolean) {\n    localStorage.setItem('sound', JSON.stringify(state));\n    return {\n        type: common.action.TOGGLE_SOUND,\n        payload: state\n    }\n}\n\nexport function toggleNotification(state: boolean) {\n    localStorage.setItem('notification', JSON.stringify(state));\n    return {\n        type: common.action.TOGGLE_NOTIFICATION,\n        payload: state\n    }\n}\n\nexport function pushToast(data: IToastItemProps) {\n    return {\n        type: common.action.PUSH_TOAST,\n        payload: data\n    }\n}\n\nexport function closePopup(openRecent: boolean = false) {\n    return {\n        type: common.action.CLOSE_POPUP,\n        payload: openRecent\n    }\n}\n\nexport function openPopup(data: IPopupProps) {\n    return {\n        type: common.action.OPEN_POPUP,\n        payload: data\n    }\n}\n\nexport function openDropdown(content: JSX.Element, position: { x: number, y: number }) {\n    return {\n        type: common.action.OPEN_DIALOG,\n        payload: { content, position }\n    }\n}\n\nexport function closeDialog() {\n    return {\n        type: common.action.CLOSE_DIALOG,\n        payload: undefined\n    }\n}\n","import socketClusterClient, { AGClientSocket } from \"socketcluster-client\";\nimport common from \"../common\";\n\nclass Socket {\n    /* __STATIC__ */\n    static instance: Socket | undefined = undefined;\n    static ins() {\n        if (!this.instance) this.instance = new Socket();\n        return this.instance;\n    }\n\n    /* __HANDLE__ */\n    socket: AGClientSocket | undefined = undefined;\n\n    getSocket() {\n        return this.socket;\n    }\n\n    init(config: { deviceId: string }) {\n        let { deviceId } = config;\n\n        let socket = socketClusterClient.create({\n            // hostname: common.config.HOST,\n            // port: common.config.PORT,\n\n            hostname: common.config.API,\n            secure: true,\n            port: 443,\n            query: {\n                deviceId: deviceId\n            }\n        });\n        this.socket = socket;\n        (window as any)['socket'] = this;\n\n        // Listener\n        socket.listener('connect').once().then(({ id, isAuthenticated }) => {\n            console.log('%cSocket', 'color: #2e7d32', 'connect', id, isAuthenticated);\n        })\n\n        socket.listener('disconnect').once().then(({ reason }) => {\n            console.log('%cSocket', 'color: #2e7d32', 'disconnect', reason)\n            //Close all listener\n            socket.closeAllChannels();\n        })\n\n        socket.listener('removeAuthToken').once().then(({ oldAuthToken }) => {\n            console.log('%cSocket', 'color: #2e7d32', 'removeAuthToken', oldAuthToken)\n        })\n\n        socket.listener('connecting').once().then(() => {\n            console.log('%cSocket', 'color: #2e7d32', 'connecting')\n        })\n\n        socket.listener('authStateChange').once().then((data) => {\n            console.log('%cSocket', 'color: #2e7d32', 'authStateChange')\n        })\n\n        socket.listener('authenticate').once().then(({ authToken, signedAuthToken }) => {\n            console.log('%cSocket', 'color: #2e7d32', 'authenticate', authToken, signedAuthToken)\n        })\n\n        socket.listener('deauthenticate').once().then(({ oldAuthToken, oldSignedAuthToken }) => {\n            console.log('%cSocket', 'color: #2e7d32', 'deauthenticate', oldAuthToken, oldSignedAuthToken)\n        })\n\n        socket.listener('error').once().then(({ error }) => {\n            console.log('%cSocket', 'color: #2e7d32', 'error', error)\n        })\n\n        socket.listener('connectAbort').once().then(({ code, reason }) => {\n            console.log('%cSocket', 'color: #2e7d32', 'connectAbort', code, reason)\n        })\n\n        socket.listener('subscribeStateChange').once().then(({ channel, newChannelState, oldChannelState, subscriptionOptions }) => {\n            console.log('%cSocket', 'color: #2e7d32', 'subscribeStateChange', channel, newChannelState, oldChannelState, subscriptionOptions)\n        })\n\n        socket.listener('subscribe').once().then(({ channel, subscriptionOptions }) => {\n            console.log('%cSocket', 'color: #2e7d32', 'subscribe', channel, subscriptionOptions)\n        })\n\n        socket.listener('subscribeFail').once().then(({ channel, error, subscriptionOptions }) => {\n            console.log('%cSocket', 'color: #2e7d32', 'subscribeFail', channel, error, subscriptionOptions)\n        })\n\n        socket.listener('unsubscribe').once().then(({ channel }) => {\n            console.log('%cSocket', 'color: #2e7d32', 'unsubscribe', channel)\n        })\n\n        socket.listener('kickOut').once().then(({ channel, message }) => {\n            console.log('%cSocket', 'color: #2e7d32', 'kickOut', channel, message)\n        })\n    }\n}\n\nconst socket = Socket.ins();\nexport default socket;","import common from \"../common\";\nimport { EContentTap, EPeopleTap } from \"../common/TypeCommon\";\n\nexport function chooseContentTab(tab: EContentTap) {\n    return async function (dispatch: Function) {\n        dispatch({\n            type: common.action.CHOOSE_CONTENT_TAB,\n            payload: tab\n        })\n    }\n}\n\nexport function choosePeopleTab(tab: EPeopleTap) {\n    return async function (dispatch: Function) {\n        dispatch({\n            type: common.action.CHOOSE_PEOPLE_TAB,\n            payload: tab\n        })\n    }\n}\n\nexport function setChatroomNavigation(id: string) {\n    return async function (dispatch: Function) {\n        dispatch({\n            type: common.action.NAVIGATOR_SET_CHATROOM,\n            payload: id\n        })\n    }\n}\n\nexport function setConversationViewType(type: string) {\n    return async function (dispatch: Function) {\n        dispatch({\n            type: common.action.SET_CONVERSATION_VIEW,\n            payload: type\n        })\n    }\n}","// Default format is \"hh:mm:ss:ms\"\nexport function milisecondsToDigital(duration: number, format: string = \"hh:mm:ss:ms\") {\n    var milliseconds = (duration % 1000) / 100,\n        seconds = Math.floor((duration / 1000) % 60),\n        minutes = Math.floor((duration / (1000 * 60)) % 60),\n        hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n    format = format.replace(\"hh\", `${(hours < 10) ? \"0\" + hours : hours}`)\n    format = format.replace(\"mm\", `${(minutes < 10) ? \"0\" + minutes : minutes}`)\n    format = format.replace(\"ss\", `${(seconds < 10) ? \"0\" + seconds : seconds}`)\n    format = format.replace(\"ms\", `${milliseconds}`)\n\n    return format\n}\n\nexport function milisecondsToTimeString(duration: number, format: string = \"hh:mm:ss:ms\") {\n    if (duration < 500) return \"Just now\"\n\n    var milliseconds = (duration % 1000) / 100,\n        seconds = Math.floor((duration / 1000) % 60),\n        minutes = Math.floor((duration / (1000 * 60)) % 60),\n        hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n    format = format.replace(/:/g, \" \")\n    format = format.replace(\"hh\", `${hours > 0 ? `${hours} ${hours <= 1 ? \"hour\" : \"hours\"}` : \"\"}`)\n    format = format.replace(\"mm\", `${seconds > 0 ? `${seconds} ${seconds <= 1 ? \"second\" : \"seconds\"}` : \"\"}`)\n    format = format.replace(\"ss\", `${minutes > 0 ? `${minutes} ${minutes <= 1 ? \"minute\" : \"minutes\"}` : \"\"}`)\n    format = format.replace(\"ms\", `${milliseconds > 0 ? `${milliseconds} ${milliseconds <= 1 ? \"millisecond\" : \"milliseconds\"}` : \"\"}`)\n\n    return format.trim()\n}\n\nexport function roundTime(duration: number, unit: boolean = false) {\n    let day = Math.floor(duration / (1000 * 60 * 60 * 24));\n    if (day) return `${day}${unit ? day > 1 ? \" days\" : \" day\" : \"d\"}`\n    let hour = Math.floor(duration / (1000 * 60 * 60));\n    if (hour) return `${hour}${unit ? day > 1 ? \" hours\" : \" hour\" : \"h\"}`\n    let minute = Math.floor(duration / (1000 * 60));\n    if (minute) return `${minute}${unit ? day > 1 ? \" minutes\" : \" minute\" : \"m\"}`\n    let second = Math.floor(duration / (1000));\n    if (second) return `${second}${unit ? day > 1 ? \" seconds\" : \" second\" : \"s\"}`\n    return `0s`\n}\n\nexport function capitalize(text: string, lower: boolean = false) {\n    return text.split(' ').map(string => string.charAt(0).toUpperCase() + string.slice(1).toLowerCase()).join(' ')\n}\n\nexport function zeroPad(number: number, width: number, z: string = \"\") {\n    z = z || '0';\n    let n = number.toString();\n    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}","import * as common from \"./CommonUtils\";\nimport * as string from \"./StringUtils\";\n\nconst util = {\n    common,\n    string\n}\n\nexport default util","import React from \"react\";\nimport { IAvatarComponentProps } from \"../interface/ComponentInterface\";\nimport { Badge } from \"react-bootstrap\";\nimport util from \"../util\";\nimport common from \"../common\";\n\nexport default function AvatarComponent({ url, online, size, className, onClick }: IAvatarComponentProps) {\n    return (\n        <div\n            className={`avatar ${className}`}\n            onClick={() => { if (typeof onClick === 'function') onClick() }}\n            style={{ cursor: typeof onClick === 'function' ? \"pointer\" : \"initial\" }}\n        >\n            <div className={`wrap ${size}`}>\n                <div className=\"img-wrap\">\n                    {\n                        url ?\n                            <img src={`${common.config.API}/${url}`} alt=\"\" height=\"100%\" />\n                            :\n                            <i className=\"fa fa-user\" />\n                    }\n                </div>\n                {\n                    online ?\n                        online.status ?\n                            <div className=\"online-status\" />\n                            :\n                            <Badge variant=\"pill dark text-bolder\">{util.string.roundTime(Date.now() - (new Date(online.lastOnlineTime)).getTime())}</Badge>\n                        :\n                        <></>\n                }\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport { IPopupConfirmProps } from \"../interface/ComponentInterface\";\nimport { Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { closePopup } from \"../action/AppActions\";\n\nfunction PopupConfirmComponent({ content, buttons, closePopup }: IPopupConfirmProps) {\n    return (\n        <div className=\"popup_confirm\">\n            <div className=\"popup_content text-normal mb-4\">\n                {content}\n            </div>\n            <div className=\"popup_control\">\n                {\n                    buttons.map((o, i) => (\n                        <Button\n                            variant={o.primary? \"primary\":\"light\"}\n                            onClick={() => {\n                                if (o.func) o.func();\n                                closePopup()\n                            }}\n                            className={`${o.primary? \"\":\"text-primary\"} text-bold`}\n                            key={i}\n                        >\n                            {o.title}\n                        </Button>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default connect(null, { closePopup })(PopupConfirmComponent)","import React, { ChangeEvent } from \"react\";\nimport { Button, FormControl, InputGroup } from \"react-bootstrap\";\nimport AvatarComponent from \"./AvatarComponent\";\nimport { IStoreState } from \"../interface/DataInterface\";\nimport { connect } from \"react-redux\";\nimport socket from \"../socket\";\nimport common from \"../common\";\nimport { IPopupUserInfoProps } from \"../interface/ComponentInterface\";\nimport { openPopup, closePopup } from \"../action/AppActions\";\nimport PopupConfirmComponent from \"./PopupConfirmComponent\";\nimport { chooseContentTab, setChatroomNavigation } from \"../action/NavigationActions\";\n\nlet timeOut: NodeJS.Timeout | undefined = undefined;\nfunction PopupUserInfoComponent(\n    {\n        data,\n        friend,\n        friendRequest,\n        user,\n        chatroom,\n        form,\n        openPopup,\n        closePopup,\n        chooseContentTab,\n        setChatroomNavigation\n    }: IPopupUserInfoProps) {\n    let { lastName, email, firstName, avatar, _id, nickname, online, lastOnlineTime } = data\n\n    // Get request if i sent\n    let requestSent = friendRequest.sent.find(o => o.from._id === user._id && o.to._id === data._id)\n\n    const onInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        let value = event.target.value;\n        let sc = socket.getSocket()\n        // Clear timeout\n        if (timeOut) clearTimeout(timeOut)\n        // Set new timeout\n        timeOut = setTimeout(() => {\n            if (timeOut) clearTimeout(timeOut)\n            if (typeof value === 'string' && sc) {\n                sc.transmit(common.packet.FRIEND, { evt: common.event.FRIEND.SETNICKNAME, data: { friendId: _id, nickname: value } })\n            }\n        }, 400)\n    }\n\n    const onClickChat = () => {\n        // Navigation to conversation content\n        chooseContentTab(common.type.EContentTap.CONVERSATION)\n        closePopup()\n        // Find or create new chatroom\n        let chatroomData = chatroom.find(o => {\n            return o.chatroom.type === 'conversation' && o.friendsChatroom.length === 1 && o.friendsChatroom[0]._id === _id\n        })\n        if (chatroomData) setChatroomNavigation(chatroomData.chatroom._id)\n        else {\n            let sc = socket.getSocket();\n            if (sc) sc.transmit(common.packet.CHATROOM,\n                {\n                    evt: common.event.CHATROOM.CREATE,\n                    data: {\n                        users: [_id],\n                        type: 'conversation',\n                    }\n                })\n        }\n    }\n\n    const onSendFriendRequest = () => {\n        let sc = socket.getSocket()\n        if (!sc) return;\n        sc.transmit(common.packet.FRIEND, { evt: common.event.FRIEND.SENDFRIENDREQUEST, data: { userId: _id } })\n    }\n\n    const onCancelFriendRequest = () => {\n        let sc = socket.getSocket()\n        if (!sc || !requestSent) return;\n        sc.transmit(common.packet.FRIEND, { evt: common.event.FRIEND.CANCELFRIENDREQUEST, data: { requestId: requestSent._id } })\n    }\n\n    const onRemoveFriend = () => {\n        openPopup({\n            body: <PopupConfirmComponent\n                content={`Are you sure you want to remove ${lastName} ${firstName} from your friends list?`}\n                buttons={[{\n                    title: \"Ok\",\n                    primary: true,\n                    func: () => {\n                        let sc = socket.getSocket()\n                        if (!sc) return;\n                        sc.transmit(common.packet.FRIEND, { evt: common.event.FRIEND.REMOVE, data: { friendId: _id } })\n                    }\n                }, { title: \"Cancel\" }]}\n            />\n        })\n    }\n\n    return (\n        <div className=\"popup_user_info\">\n            <AvatarComponent url={avatar} size=\"langer\" className=\"mb-2\" online={{ status: online, lastOnlineTime }} />\n            <div className=\"text-normal text-13\">{email}</div>\n            <div className=\"d-flex align-items-center flex-column mb-4\">\n                <div className=\"text-normal text-30\">{`${lastName} ${firstName}`}</div>\n                <div className={`nickname align-items-center ${form !== \"friend\" || friend.every(o => o._id !== _id) ? 'd-none' : 'd-flex'}`}>\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                            placeholder=\"Nickname\"\n                            defaultValue={nickname}\n                            aria-label=\"Nickname\"\n                            aria-describedby=\"basic-addon1\"\n                            onChange={onInputChange}\n                        />\n                        <InputGroup.Append>\n                            <InputGroup.Text id=\"basic-addon1\">\n                                <i className=\"fa fa-pencil\" />\n                            </InputGroup.Text>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </div>\n            </div>\n            <div className=\"control-area\">\n                {/* {\n                    friend.every(o => o._id !== _id) ?\n                        <>:</>\n                        : */}\n                <Button\n                    variant=\"outline-primary\"\n                    onClick={onClickChat}\n                >\n                    <i className=\"fa fa-comment\" />\n                </Button>\n                {/* } */}\n                {\n                    friend.every(o => o._id !== _id) ?\n                        <Button variant={requestSent ? \"outline-danger\" : \"outline-primary\"} onClick={requestSent ? onCancelFriendRequest : onSendFriendRequest}>\n                            {\n                                requestSent ?\n                                    <i className=\"fa fa-user-times\" />\n                                    :\n                                    <i className=\"fa fa-user-plus\" />\n                            }\n                        </Button>\n                        :\n                        <Button variant=\"outline-danger\" onClick={onRemoveFriend}>\n                            <i className=\"fa fa-trash\" />\n                        </Button>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default connect(\n    ({ friend, friendRequest, user, chatroom }: IStoreState) => ({\n        user,\n        friend,\n        friendRequest,\n        chatroom\n    }),\n    {\n        openPopup,\n        closePopup,\n        chooseContentTab,\n        setChatroomNavigation\n    }\n)(PopupUserInfoComponent)","import React from \"react\";\nimport AvatarComponent from \"./AvatarComponent\";\nimport { connect } from \"react-redux\";\nimport { IStoreState } from \"../interface/DataInterface\";\nimport { IContentChatHeaderProps } from \"../interface/ComponentInterface\";\nimport util from \"../util\";\nimport { setChatroomNavigation } from \"../action/NavigationActions\";\nimport { openPopup } from \"../action/AppActions\";\nimport PopupUserInfoComponent from \"./PopupUserInfoComponent\";\n\nfunction ContentChatHeaderComponent({ chatroom, navigation, friend, setChatroomNavigation, openPopup }: IContentChatHeaderProps) {\n    // Get chatroom data\n    let chatroomId = navigation.chatroom;\n    let chatroomData = chatroom.find(o => o.chatroom._id === chatroomId);\n    if (!chatroomData) return <></>\n    let { friendsChatroom } = chatroomData;\n    // Get frienddata\n    let friendsData = chatroomData.friendsChatroom.map(o => friend.find(oo => oo._id === o.user._id))\n    // Chatroom name\n    let chatroomName = chatroomData.chatroom.type === 'conversation' ?\n        friendsData.length > 0 && friendsData[0]?.nickname ?\n            friendsData[0]?.nickname :\n            `${friendsChatroom[0]?.user?.lastName} ${friendsChatroom[0]?.user?.firstName}` :\n        chatroomData.chatroom.name\n    // Active time\n    let activeTime = chatroomData.chatroom.type === 'conversation' && friendsChatroom.length > 0 && friendsChatroom[0]?.user?.online ? \"Online\" :\n        friendsChatroom[0]?.user?.lastOnlineTime ? `Active ${util.string.roundTime(Date.now() - new Date(friendsChatroom[0]?.user?.lastOnlineTime).getTime(), true)} ago` : \"\"\n    // Avatar\n    let avtUrl = chatroomData.chatroom.type === 'conversation' && friendsChatroom.length > 0 ? friendsChatroom[0]?.user?.avatar : undefined\n    // Click handle\n    let clickHandle = () => {\n        if (chatroomData && chatroomData.chatroom.type === 'conversation' && friendsChatroom.length > 0 && friendsChatroom[0]?.user) {\n            openPopup({ body: <PopupUserInfoComponent data={friendsChatroom[0]?.user} form=\"friend\" /> })\n        }\n    }\n\n    return (\n        <div className=\"info-area px-3 py-2\">\n            <div className=\"d-flex\">\n                <button\n                    className=\"pr-3 d-sm-none\"\n                    onClick={() => { setChatroomNavigation(undefined) }}\n                >\n                    <i className=\"fa fa-chevron-left font-weight-light text-primary\" />\n                </button>\n                <AvatarComponent\n                    url={avtUrl}\n                    size=\"normal\"\n                    onClick={clickHandle}\n                />\n                <div className=\"user-info ml-3\">\n                    <p className=\"text-bold text-16\">{chatroomName}</p>\n                    <p className=\"text-normal text-light text-12\">{activeTime}</p>\n                </div>\n            </div>\n            <div className=\"control d-flex align-items-center\">\n                {/* <button>\n                    <i className=\"fa fa-info-circle\" />\n                </button> */}\n            </div>\n        </div>\n    )\n}\n\nexport default connect(({ navigation, chatroom, friend }: IStoreState) => ({ navigation, chatroom, friend }), { setChatroomNavigation, openPopup })(ContentChatHeaderComponent);","import React, { useState } from \"react\";\nimport { InputGroup, Button, FormControl, Form } from \"react-bootstrap\";\nimport { IContentChatControlProps } from \"../interface/ComponentInterface\";\nimport { IStoreState } from \"../interface/DataInterface\";\nimport { connect } from \"react-redux\";\nimport socket from \"../socket\";\nimport common from \"../common\";\n\nfunction ContentChatControlComponent({ chatroom, navigation }: IContentChatControlProps) {\n    let [onTyping, setOnTyping] = useState(false);\n    let [text, setText] = useState(\"\");\n    // Get chatroom data\n    let chatroomId = navigation.chatroom;\n    let chatroomData = chatroom.find(o => o.chatroom._id === chatroomId);\n    if (!chatroomData) return <></>\n\n    const sendTyping = (typing: boolean) => {\n        let sc = socket.getSocket();\n        if (sc) sc.transmit(common.packet.CHATROOM, {\n            evt: common.event.CHATROOM.SEND_TYPING,\n            data: {\n                typing,\n                chatroomId: chatroomId\n            }\n        })\n    }\n\n    const sendRead = () => {\n        if (chatroomData && !chatroomData?.myChatroom.read) {\n            let sc = socket.getSocket();\n            if (sc) {\n                sc.transmit(common.packet.CHATROOM, {\n                    evt: common.event.CHATROOM.MASK_AS_READ,\n                    data: { userChatroomId: chatroomData.myChatroom._id }\n                })\n            }\n        }\n    }\n\n    // Submit handle\n    const onSubmit = (event: React.FormEvent<HTMLElement>) => {\n        event.preventDefault();\n        // Check\n        if (typeof text !== 'string' || !text.length) return\n        // Reset\n        setText('')\n        // Send\n        let sc = socket.getSocket();\n        if (!sc) return;\n        sc.transmit(common.packet.MESSAGE, {\n            evt: common.event.MESSAGE.SEND,\n            data: { text, chatroomId }\n        })\n        // Transmit typing\n        setOnTyping(false);\n        sendTyping(false);\n    }\n\n    // Input handle\n    const onChangeText = (event: React.FormEvent<HTMLElement>) => {\n        let value = (event.target as any).value;\n        setText(value);\n        sendRead();\n        if (!onTyping && value) {\n            // Set state\n            setOnTyping(true);\n            // Transmit\n            sendTyping(true);\n        } else if (onTyping && !value) {\n            // Set state\n            setOnTyping(false);\n            // Transmit\n            sendTyping(false);\n        }\n    }\n\n    const onForcusInput = () => {\n        sendRead()\n    }\n\n    const onBlurInput = () => {\n        if (onTyping) {\n            // Set state\n            setOnTyping(false);\n            // Transmit\n            sendTyping(false);\n        }\n    }\n\n    return (\n        <Form\n            className=\"control-area px-3 py-2\"\n            onSubmit={onSubmit}\n        >\n            <InputGroup>\n                <FormControl\n                    placeholder=\"Enter your message...\"\n                    aria-label=\"Enter your message...\"\n                    value={text}\n                    aria-describedby=\"basic-addon1\"\n                    onChange={onChangeText}\n                    onFocus={onForcusInput}\n                    onBlur={onBlurInput}\n                />\n                <InputGroup.Append>\n                    <InputGroup.Text id=\"basic-addon1\"></InputGroup.Text>\n                </InputGroup.Append>\n            </InputGroup>\n            <Button\n                className=\"ml-2 btn-circle\"\n                onClick={onSubmit}\n            >\n                <i className=\"fa fa-paper-plane\" />\n            </Button>\n        </Form>\n    )\n}\n\nexport default connect(({ navigation, chatroom }: IStoreState) => ({ navigation, chatroom }))(ContentChatControlComponent);","import React, { useState, useEffect } from \"react\";\nimport { IContentChatMessageProps } from \"../interface/ComponentInterface\";\nimport { connect } from \"react-redux\";\nimport { IStoreState, IMessageData, IUserData, IFriendData, INavigatorData } from \"../interface/DataInterface\";\nimport socket from \"../socket\";\nimport common from \"../common\";\nimport AvatarComponent from \"./AvatarComponent\";\nimport { Spinner } from \"react-bootstrap\";\n\nlet timeout: NodeJS.Timeout | undefined = undefined\nfunction ContentChatMessagesComponent({ chatroom, navigation, message, user }: IContentChatMessageProps) {\n    let [update, setUpdate]: [number, Function] = useState(0);\n    let [loading, setLoading]: [boolean, Function] = useState(false);\n    // On drag\n    window.addEventListener('resize', (...a) => {\n        if (timeout) {\n            clearTimeout(timeout);\n            timeout = undefined;\n        }\n        timeout = setTimeout(() => {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = undefined;\n            }\n            setUpdate(Math.random())\n        }, 100);\n    })\n    let height = window.innerHeight - 57 - 50;\n    // Check scroll\n    useEffect(() => {\n        let chatArea = document.getElementById('chat-area');\n        if (chatArea) {\n            chatArea.addEventListener('scroll', (event) => {\n                let topOffset = (event.target as any).scrollTop;\n                if (typeof topOffset === 'number' && topOffset === 0 && !loading) {\n                    setLoading(true);\n\n                    let sc = socket.getSocket()\n                    if (sc) sc.transmit(common.packet.MESSAGE, { evt: common.event.MESSAGE.GET, data: { chatroomId: navigation.chatroom, skip: messageData.length } })\n                    setTimeout(() => { setLoading(false); }, 1000)\n                }\n            });\n        }\n    })\n    // Get chatroom data\n    let chatroomId = navigation.chatroom;\n    let chatroomData = chatroom.find(o => o.chatroom._id === chatroomId);\n    if (!chatroomData) return (\n        <div className=\"d-flex w-100 h-100 justify-content-center align-items-center text-20\">\n            Let's start your first conversation\n        </div>\n    )\n\n    // Get message list\n    let messageData: IMessageData[] = [];\n    if (chatroomId && message[chatroomId]) {\n        messageData = message[chatroomId]\n    }\n    else {\n        let sc = socket.getSocket()\n        if (sc) sc.transmit(common.packet.MESSAGE, { evt: common.event.MESSAGE.GET, data: { chatroomId } })\n    }\n\n    return (\n        <div className=\"chat-area\" id=\"chat-area\" style={{ height: update ? height : height }}>\n            <ItemChatTypingComponent\n            />\n            {\n                messageData.map((o, i) => (\n                    <ItemChatMessagesComponent\n                        data={o}\n                        preData={messageData[i - 1]}\n                        nextData={messageData[i + 1]}\n                        user={user}\n                        key={i}\n                    />\n                ))\n            }\n            <div className={`justify-content-center py-2 ${loading ? \"d-flex\" : \"d-none\"}`}>\n                <Spinner animation=\"border\" />\n            </div>\n        </div>\n    )\n\n}\n\nfunction ItemChatMessagesComponent({ data, preData, nextData, user }: { data: IMessageData, preData?: IMessageData, nextData?: IMessageData, user: IUserData }) {\n    let isMine = (data.user as IFriendData)._id === user._id;\n    let isMidChat = (nextData?.user as IFriendData)?._id === (data.user as IFriendData)._id && (preData?.user as IFriendData)?._id === (data.user as IFriendData)._id;\n    let isEndChat = (nextData?.user as IFriendData)?._id === (data.user as IFriendData)._id && (preData?.user as IFriendData)?._id !== (data.user as IFriendData)._id;\n    let isTopChat = (nextData?.user as IFriendData)?._id !== (data.user as IFriendData)._id && (preData?.user as IFriendData)?._id === (data.user as IFriendData)._id;\n    let isAloneChat = (nextData?.user as IFriendData)?._id !== (data.user as IFriendData)._id && (preData?.user as IFriendData)?._id !== (data.user as IFriendData)._id;\n\n    return (\n        <div className={`\n            item-chat-message \n            px-3 \n            ${isMine ? \"mine\" : \"friend\"} \n            ${isEndChat || isAloneChat ? \"mb-3\" : \"\"}\n            `}\n        >\n            <AvatarComponent\n                url={(data.user as IFriendData).avatar}\n                size=\"small\"\n                className={`${!isMine && (isEndChat || isAloneChat) ? \"visible\" : \"invisible\"} mr-2`}\n            />\n            <div className={`message-text text-normal text-15 ${isMidChat ? \"chat-mid\" : isEndChat ? \"chat-end\" : isTopChat ? \"chat-top\" : \"\"}`}>\n                {data.message}\n            </div>\n        </div>\n    )\n}\n\n\nconst ItemChatTypingComponent = connect(({ typing, navigation, user }: IStoreState) => ({ typing, navigation, user }))\n    (function ({ typing, navigation, user }: { typing: { [key in string]: IFriendData[] }, navigation: INavigatorData, user: IUserData }) {\n        let chatroomId = navigation.chatroom;\n        let typingData = chatroomId ? typing[chatroomId] : undefined\n        let show = typingData && typingData.some(o => o._id !== user._id)\n        let avtUrl = typingData && typingData.find(o => o._id !== user._id)?.avatar;\n        return (\n            <div className={`item-chat-message px-3 friend mb-3 ${show ? \"d-flex\" : \"d-none\"}`}\n            >\n                <AvatarComponent\n                    url={avtUrl}\n                    size=\"small\"\n                    className={`visible mr-2`}\n                />\n                <div>\n                    <div className=\"dotsContainer\">\n                        <span id=\"dot1\"></span>\n                        <span id=\"dot2\"></span>\n                        <span id=\"dot3\"></span>\n                    </div>\n                </div>\n            </div>\n        )\n    })\n\nexport default connect(({ navigation, chatroom, message, user }: IStoreState) => ({ navigation, chatroom, message, user }))(ContentChatMessagesComponent);","import React, { Component } from \"react\";\nimport ContentChatHeaderComponent from \"./ContentChatHeaderComponent\";\nimport ContentChatControlComponent from \"./ContentChatControlComponent\";\nimport ContentChatMessagesComponent from \"./ContentChatMessagesComponent\";\n\nclass ContentChatComponent extends Component {\n    render() {\n        return (\n            <div className=\"content-chat\">\n                <ContentChatHeaderComponent />\n                <ContentChatMessagesComponent />\n                <ContentChatControlComponent />\n            </div>\n        )\n    }\n}\n\nexport default ContentChatComponent;","import React, { ChangeEvent, useState } from \"react\";\nimport { InputGroup, FormControl, Spinner } from \"react-bootstrap\";\nimport AvatarComponent from \"./AvatarComponent\";\nimport socket from \"../socket\";\nimport common from \"../common\";\nimport { connect } from \"react-redux\";\nimport { IFriendData } from \"../interface/DataInterface\";\nimport { openPopup } from \"../action/AppActions\";\nimport PopupUserInfoComponent from \"./PopupUserInfoComponent\";\n\nlet timeOut: NodeJS.Timeout | undefined = undefined;\nexport default function PopupSearchUserComponent() {\n    let [users, setUsers]: [IFriendData[], Function] = useState([])\n    let [onSearch, setOnSearch] = useState(false)\n\n    const onInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        let value = event.target.value;\n        let sc = socket.getSocket()\n        // Clear timeout\n        if (timeOut) clearTimeout(timeOut)\n        // Set search state\n        if (!onSearch) setOnSearch(true)\n        // Set new timeout\n        timeOut = setTimeout(() => {\n            if (timeOut) clearTimeout(timeOut)\n            if (value && sc) {\n                sc.invoke(common.packet.USER, { evt: common.event.USER.GET, data: { string: value } })\n                    .then(data => {\n                        setUsers(data)\n                    })\n            }\n            setOnSearch(false)\n        }, 300)\n    }\n\n    return (\n        <div className=\"popup_search_user\">\n            <InputGroup className=\"mb-1\">\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"basic-addon1\">\n                        <i className=\"fa fa-search\" />\n                    </InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                    placeholder=\"Find on message\"\n                    aria-label=\"Username\"\n                    aria-describedby=\"basic-addon1\"\n                    onChange={onInputChange}\n                />\n                <InputGroup.Append>\n                    <InputGroup.Text id=\"basic-addon1\">\n                        {onSearch ? <Spinner size=\"sm\" animation=\"border\" /> : <></>}\n                    </InputGroup.Text>\n                </InputGroup.Append>\n            </InputGroup>\n            <div className=\"popup-content\">\n                {\n                    users.map((o, i) => (\n                        <Item\n                            data={o}\n                            key={i}\n                        />\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nfunction SearchUserItemComponent({ data, openPopup }: { openPopup: Function, data: IFriendData }) {\n    let { lastName, firstName, avatar, email } = data;\n\n    const onClickItem = () => {\n        openPopup({ body: <PopupUserInfoComponent data={data} />, openRecent: true })\n    }\n\n    return (\n        <div\n            className=\"popup-item px-3 pb-1\"\n            style={{ cursor: \"pointer\" }}\n            onClick={onClickItem}\n        >\n            <AvatarComponent url={avatar} size=\"normal\" />\n            <div className=\"popup-item-name\">\n                <p className=\"text-normal text-18\">{`${lastName} ${firstName}`}</p>\n                <p className=\"text-normal text-11\">{email}</p>\n            </div>\n        </div>\n    )\n}\n\nconst Item = connect(null, { openPopup })(SearchUserItemComponent)","import React from \"react\";\nimport { IStoreState } from \"../interface/DataInterface\";\nimport { connect } from \"react-redux\";\nimport { toggleNotification, toggleSound } from \"../action/AppActions\";\nimport { IPopupSettingProps } from \"../interface/ComponentInterface\";\nimport { Form } from \"react-bootstrap\";\nimport AvatarComponent from \"./AvatarComponent\";\n\nfunction PopupSettingComponent({ user, app, toggleNotification, toggleSound }: IPopupSettingProps) {\n    let { avatar, firstName, lastName } = user;\n    let { sound, notification } = app;\n\n    return (\n        <div className=\"popup_setting\">\n            <div className=\"popup_item\">\n                <div className=\"popup_item_title\">\n                    Account\n                </div>\n                <div className=\"popup_item_content\">\n                    <AvatarComponent size=\"small\" url={avatar} className=\"mr-3\" />\n                    <p>\n                        {`${lastName} ${firstName}`}\n                    </p>\n                </div>\n            </div>\n            <div className=\"popup_item\">\n                <div className=\"popup_item_title\">\n                    Sound\n                </div>\n                <div className=\"popup_item_content\">\n                    <Form>\n                        <Form.Check\n                            type=\"switch\"\n                            id=\"sound-switch\"\n                            label=\"\"\n                            defaultChecked={sound}\n                            onChange={() => { toggleSound(!sound) }}\n                        />\n                    </Form>\n                </div>\n            </div>\n            <div className=\"popup_item\">\n                <div className=\"popup_item_title\">\n                    Notification\n                </div>\n                <div className=\"popup_item_content\">\n                    <Form>\n                        <Form.Check\n                            type=\"switch\"\n                            id=\"notification-switch\"\n                            label=\"\"\n                            defaultChecked={notification}\n                            onChange={() => { toggleNotification(!notification) }}\n                        />\n                    </Form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(({ user, app }: IStoreState) => ({ user, app }), { toggleNotification, toggleSound })(PopupSettingComponent)","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { logout } from \"../action/UserActions\";\nimport { connect } from \"react-redux\";\nimport { openPopup } from \"../action/AppActions\";\nimport { setConversationViewType } from \"../action/NavigationActions\";\nimport PopupSettingComponent from \"./PopupSettingComponent\";\nimport { EConversationType } from \"../common/TypeCommon\";\n\nfunction ContentSettingDropComponents({ logout, openPopup, setConversationViewType }: { logout: Function, openPopup: Function, setConversationViewType: Function }) {\n    return (\n        <div className=\"setting_drop_content drop_content\">\n            <Button\n                variant=\"outline-secondary drop_item\"\n                onClick={() => {\n                    openPopup({\n                        header: {\n                            title: \"Setting\",\n                            btnRight: {\n                                title: \"Done\"\n                            }\n                        },\n                        body: <PopupSettingComponent />\n                    })\n                }}\n            >\n                Setting\n            </Button>\n            <div className=\"drop_seperate\" />\n            <Button\n                variant=\"outline-secondary drop_item\"\n                onClick={() => { setConversationViewType(EConversationType.NORMAL) }}\n            >\n                Chat message\n            </Button>\n            <Button\n                variant=\"outline-secondary drop_item\"\n                onClick={() => { setConversationViewType(EConversationType.ARCHIVE) }}\n            >\n                Archive message\n            </Button>\n            <Button\n                variant=\"outline-secondary drop_item\"\n                onClick={() => { setConversationViewType(EConversationType.BLOCK) }}\n            >\n                Block message\n            </Button>\n            <div className=\"drop_seperate\" />\n            <Button variant=\"outline-secondary drop_item\">About</Button>\n            <Button variant=\"outline-secondary drop_item\">Rule</Button>\n            <Button variant=\"outline-secondary drop_item\">Privacy policy</Button>\n            <Button variant=\"outline-secondary drop_item\">Cookie policy</Button>\n            <div className=\"drop_seperate\" />\n            <Button variant=\"outline-secondary drop_item\">Help</Button>\n            <Button variant=\"outline-secondary drop_item\">Report problem</Button>\n            <div className=\"drop_seperate\" />\n            <Button variant=\"outline-secondary drop_item\" onClick={() => { logout() }}>Logout</Button>\n        </div>\n    )\n}\n\nexport default connect(null, { logout, openPopup, setConversationViewType })(ContentSettingDropComponents)","import common from \"../common\";\nimport * as api from \"../Api\"\nimport socket from \"../socket\";\nimport { IUserData } from \"../interface/DataInterface\";\n\nexport function login(email: string, password: string) {\n    return async function (dispatch: Function) {\n        // Get data\n        let data = await api.login(email, password)\n        // Check data\n        if (!data.success) {\n            console.log(data.message)\n        } else {\n            // Dispatch action\n            dispatch({\n                type: common.action.LOGIN,\n                payload: data.data.user\n            })\n        }\n    }\n}\n\nexport function register(payload: { email: string, password: string, confirmPassword: string, firstName: string, lastName: string }) {\n    return async function (dispatch: Function) {\n        // Get data\n        let data = await api.register(payload)\n        // Check data\n        if (!data.success) {\n            console.log(data.message)\n        } else {\n            // Dispatch action\n            dispatch({\n                type: common.action.REGISTER,\n                payload: data.data.user\n            })\n        }\n    }\n}\n\nexport function token() {\n    return async function (dispatch: Function) {\n        // Get data\n        let data = await api.token()\n        // Check data\n        if (!data.success) {\n            dispatch({\n                type: common.action.TOKEN,\n                payload: {}\n            })\n        } else {\n            dispatch({\n                type: common.action.TOKEN,\n                payload: data.data.user\n            })\n        }\n    }\n}\n\nexport function updateUserData(data: IUserData) {\n    return {\n        type: common.action.UPDATE_USER_DATA,\n        payload: data\n    }\n}\n\nexport function cleanUserData() {\n    return {\n        type: common.action.CLEAN_USER_DATA,\n    }\n}\n\nexport function verify(uuid: string) {\n    return async function (dispatch: Function) {\n        // Get data\n        let data = await api.verify(uuid)\n        // Check data\n        if (!data.success) {\n            console.log(data.message)\n        } else {\n            // Dispatch action\n            dispatch({\n                type: common.action.VERIFY\n            })\n        }\n    }\n}\n\nexport function logout() {\n    return async function (dispatch: Function) {\n        // Get data\n        let data = await api.logout()\n        // Check data\n        if (!data.success) {\n            console.log(data.message)\n        } else {\n            // Socket disconnect\n            socket.socket?.disconnect();\n            // Dispatch action\n            dispatch({\n                type: common.action.LOGOUT,\n            })\n        }\n    }\n}","import React, { useState, ChangeEvent } from \"react\";\nimport { IStoreState } from \"../interface/DataInterface\";\nimport { connect } from \"react-redux\";\nimport { IPopupProfileProps } from \"../interface/ComponentInterface\";\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport { updateUserData } from \"../action/UserActions\";\nimport { pushToast, closePopup } from \"../action/AppActions\";\nimport AvatarComponent from \"./AvatarComponent\";\nimport socket from \"../socket\";\nimport common from \"../common\";\nimport * as api from \"../Api\";\n\nfunction PopupProfileComponents({ user, updateUserData, pushToast, closePopup }: IPopupProfileProps) {\n    // State variable\n    let [view, setView]: [string, Function] = useState(\"view\")\n    let [error, setError] = useState(false)\n    let [dragEnter, setDragEnter] = useState(false)\n    let [uploadImageData, setUploadImageData] = useState(\"\");\n    // Form variable\n    let [uploadImage, setUploadImage]: [File | undefined, Function] = useState(undefined);\n    let [firstName, setFirstName] = useState(user.firstName)\n    let [lastName, setLastName] = useState(user.lastName)\n    let [password, setPassword] = useState(\"\")\n    let [confirmPassword, setConfirmPassword] = useState(\"\")\n    let [oldPassword, setOldPassword] = useState(\"\")\n\n    const resetState = () => {\n        setView(\"view\")\n        setPassword(\"\")\n        setConfirmPassword(\"\")\n        setOldPassword(\"\")\n        setError(false)\n    }\n\n    const onClickDone = async () => {\n        let sc = socket.getSocket()\n        if (!sc) return setView(\"view\")\n\n        if (view === \"changePassword\") {\n            if (password === confirmPassword) {\n                sc.invoke(common.packet.PROFILE,\n                    {\n                        evt: common.event.PROFILE.PUT,\n                        data: { oldPassword, password }\n                    }).then(data => {\n                        pushToast({\n                            content: data.message,\n                            time: new Date()\n                        })\n                        updateUserData(data.data)\n                        resetState()\n                        closePopup()\n                    }).catch(err => {\n                        pushToast({\n                            content: \"Edit profile error\",\n                            time: new Date()\n                        })\n                        setError(true)\n                    })\n            } else {\n                setError(true)\n            }\n        } else if (view === \"editData\") {\n            // Upload avatar\n            let avatar = \"\"\n            if (uploadImage) {\n                let formData = new FormData();\n                formData.append('file', uploadImage as any)\n                let response = await api.uploadAvatar(formData)\n                if (response.success) avatar = response.data;\n                else {\n                    setError(true)\n                    return\n                }\n            }\n            // Change profile\n            let data: any = { oldPassword, firstName, lastName };\n            if (avatar) data.avatar = avatar\n\n            sc.invoke(common.packet.PROFILE,\n                {\n                    evt: common.event.PROFILE.PUT,\n                    data: data\n                }).then(data => {\n                    pushToast({\n                        content: data.message,\n                        time: new Date()\n                    })\n                    updateUserData(data.data)\n                    resetState()\n                }).catch(err => {\n                    pushToast({\n                        content: \"Edit profile error\",\n                        time: new Date()\n                    })\n                    setError(true)\n                })\n        } else {\n            setView(\"view\")\n        }\n    }\n\n    const onChangeFirstName = (event: ChangeEvent<HTMLInputElement>) => {\n        setFirstName(event.target.value);\n    }\n\n    const onChangeLastName = (event: ChangeEvent<HTMLInputElement>) => {\n        setLastName(event.target.value);\n    }\n\n    const onChangePassword = (event: ChangeEvent<HTMLInputElement>) => {\n        setPassword(event.target.value);\n    }\n\n    const onChangeConfirmPassword = (event: ChangeEvent<HTMLInputElement>) => {\n        setConfirmPassword(event.target.value);\n    }\n\n    const onChangeOldPassword = (event: ChangeEvent<HTMLInputElement>) => {\n        setOldPassword(event.target.value);\n    }\n\n    const onDragEnter = (event: React.DragEvent<HTMLInputElement>) => {\n        setDragEnter(true);\n    }\n\n    const onDragLeave = (event: React.DragEvent<HTMLInputElement>) => {\n        setDragEnter(false)\n    }\n\n    const onFileDrop = (event: ChangeEvent<HTMLInputElement>) => {\n        // Set view\n        setDragEnter(false);\n        // File\n        let file = event.target.files?.[0];\n        if (file) {\n            var reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = (event) => {\n                setUploadImage(file)\n                setUploadImageData(event.target?.result as string)\n            }\n        }\n    }\n\n    return (\n        <div className=\"popup_profile\">\n            <div className=\"d-flex justify-content-center mb-1 position-relative\">\n                <AvatarComponent\n                    url={user.avatar}\n                    size=\"langer\"\n                    className={`${view !== \"editData\" ? \"d-inline-flex\" : \"d-none\"}`}\n                />\n                <div className={`${view === \"editData\" ? \"avatar\" : \"d-none\"}`}>\n                    <div className=\"wrap langer\">\n                        {\n                            user.avatar || uploadImageData ?\n                                <img src={uploadImageData ? uploadImageData : `${common.config.API}/${user.avatar}`} alt=\"\" height=\"100%\" />\n                                :\n                                <div></div>\n                        }\n                        <div className={`avatar-form ${dragEnter || (!user.avatar && !uploadImageData) ? \"drag-enter\" : \"\"}`}>\n                            <span className=\"file-msg\">\n                                <i className=\"fa fa-plus\" />\n                            </span>\n                            <input\n                                className=\"file-input\"\n                                type=\"file\"\n                                multiple\n                                onDragEnter={onDragEnter}\n                                onDragLeave={onDragLeave}\n                                onChange={onFileDrop}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <button\n                    className={`position-absolute text-18 ${view === 'view' ? 'd-none' : 'd-block'}`}\n                    style={{ left: \"0px\" }}\n                    onClick={() => { resetState() }}\n                >\n                    <i className=\"fa fa-chevron-left font-weight-light\" />\n                </button>\n            </div>\n            <div className={`mb-3 text-center`}>{user.email}</div>\n            <InputGroup className={`mb-3 ${view === \"editData\" || view === \"view\" ? \"d-flex\" : \"d-none\"}`}>\n                <FormControl\n                    placeholder=\"Lastname\"\n                    aria-label=\"Lastname\"\n                    className={`text-bold ${view !== \"view\" && error ? \"wrong\" : \"\"}`}\n                    value={lastName}\n                    readOnly={view === \"view\"}\n                    onChange={onChangeLastName}\n                />\n            </InputGroup>\n            <InputGroup className={`mb-3 ${view === \"editData\" || view === \"view\" ? \"d-flex\" : \"d-none\"}`}>\n                <FormControl\n                    placeholder=\"Firstname\"\n                    aria-label=\"Firstname\"\n                    className={`text-bold ${view !== \"view\" && error ? \"wrong\" : \"\"}`}\n                    value={firstName}\n                    readOnly={view === \"view\"}\n                    onChange={onChangeFirstName}\n                />\n            </InputGroup>\n            <InputGroup className={`mb-3 ${view === \"changePassword\" ? \"d-flex\" : \"d-none\"}`}>\n                <FormControl\n                    placeholder=\"Password\"\n                    aria-label=\"Password\"\n                    className={`text-normal ${view !== \"view\" && error ? \"wrong\" : \"\"}`}\n                    value={password}\n                    type=\"password\"\n                    onChange={onChangePassword}\n                />\n            </InputGroup>\n            <InputGroup className={`mb-3 ${view === \"changePassword\" ? \"d-flex\" : \"d-none\"}`}>\n                <FormControl\n                    placeholder=\"Confirm password\"\n                    aria-label=\"Confirm password\"\n                    value={confirmPassword}\n                    className={`text-normal ${view !== \"view\" && error ? \"wrong\" : \"\"}`}\n                    type=\"password\"\n                    onChange={onChangeConfirmPassword}\n                />\n            </InputGroup>\n            <InputGroup className={`mb-3 ${view === \"view\" || view === \"changeAvatar\" ? \"d-none\" : \"d-flex\"}`}>\n                <FormControl\n                    placeholder=\"Old password\"\n                    aria-label=\"Old password\"\n                    value={oldPassword}\n                    className={`text-normal ${view !== \"view\" && error ? \"wrong\" : \"\"}`}\n                    type=\"password\"\n                    onChange={onChangeOldPassword}\n                />\n            </InputGroup>\n            <div className=\"profile_control\">\n                <Button\n                    variant=\"outline-primary\"\n                    className={`btn-outline-custom text-bold ${view === \"view\" ? \"d-inline-block\" : \"d-none\"}`}\n                    onClick={() => { setView(\"editData\") }}\n                >\n                    Edit profile\n                </Button>\n                <Button\n                    variant=\"outline-primary\"\n                    className={`btn-outline-custom text-bold ${view === \"view\" ? \"d-inline-block\" : \"d-none\"}`}\n                    onClick={() => { setView(\"changePassword\") }}\n                >\n                    Change password\n                </Button>\n                <Button\n                    variant=\"primary\"\n                    className={`text-bold ${view !== \"view\" ? \"d-inline-block\" : \"d-none\"}`}\n                    onClick={() => { onClickDone() }}\n                >\n                    Done\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(({ user }: IStoreState) => ({ user }), { updateUserData, pushToast, closePopup })(PopupProfileComponents)","import React from \"react\";\nimport AvatarComponent from \"./AvatarComponent\";\nimport { Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { IStoreState } from \"../interface/DataInterface\";\nimport { IContentHeaderProps } from \"../interface/ComponentInterface\";\nimport { openPopup, openDropdown } from \"../action/AppActions\";\nimport util from \"../util\";\nimport PopupSearchUserComponent from \"./PopupSearchUserComponent\";\nimport DropdownSettingComponent from \"./DropdownSettingComponent\";\nimport PopupProfileComponents from \"./PopupProfileComponents\";\nimport { EViewType } from \"../common/TypeCommon\";\n\nfunction ContentHeaderComponent({ openPopup, openDropdown, navigation, user, app }: IContentHeaderProps) {\n    return (\n        <div className=\"content-header justify-content-between px-3 py-2 position-relative\">\n            <div className=\"d-flex align-items-center\" style={{ width: \"100px\" }}>\n                <AvatarComponent\n                    url={user.avatar}\n                    size=\"normal\"\n                    className=\"mr-3\"\n                    onClick={() => {\n                        openPopup({\n                            body: <PopupProfileComponents />\n                        })\n                    }}\n                />\n            </div>\n            <h1 className=\"text-23 text-bold m-0 text-capitalize\">\n                {util.string.capitalize(navigation.contentTab)}\n            </h1>\n            <div className=\"d-flex align-items-center\" style={{ width: \"100px\" }}>\n                <Button\n                    variant=\"outline-danger\"\n                    className=\"btn-outline-custom btn-circle mr-3\"\n                    onClick={(event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n                        let rect = ((event.target as any).getBoundingClientRect())\n                        openDropdown(<DropdownSettingComponent />, { x: app.viewType === EViewType.WINDOW ? rect.left - 10 : rect.left - 130, y: rect.bottom + 15 })\n                    }}\n                >\n                    <i className=\"fa fa-cog\" />\n                </Button>\n                <Button\n                    variant=\"outline-primary\"\n                    className=\"btn-outline-custom btn-circle mr-3\"\n                    onClick={() => {\n                        openPopup({\n                            header: {\n                                title: \"User\",\n                                btnRight: {\n                                    title: \"Done\"\n                                }\n                            },\n                            body: <PopupSearchUserComponent />\n                        })\n                    }}\n                >\n                    <i className=\"fa fa-user-plus\" style={{ fontSize: '18px' }} />\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ navigation, user, app }: IStoreState) => ({ navigation, user, app })\nconst mapDispatchToProps = { openPopup, openDropdown }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentHeaderComponent);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { IStoreState } from \"../interface/DataInterface\";\nimport { chooseContentTab } from \"../action/NavigationActions\";\nimport { IFooterComponentProps } from \"../interface/ComponentInterface\";\nimport { EContentTap } from \"../common/TypeCommon\";\n\nfunction ContentFooterComponent({ navigation, chooseContentTab }: IFooterComponentProps) {\n    let tab = navigation.contentTab;\n\n    return (\n        <div className=\"content-footer px-3 pt-2\">\n            <div\n                className={`footer-item ${tab === EContentTap.CONVERSATION ? \"active\" : \"\"}`}\n                onClick={() => { chooseContentTab(EContentTap.CONVERSATION) }}\n            >\n                <div className=\"item-content\">\n                    <i className=\"fa fa-comment\" />\n                    <p className=\"text-bold\">Chats</p>\n                </div>\n            </div>\n            <div\n                className={`footer-item ${tab === EContentTap.PEOPLE ? \"active\" : \"\"}`}\n                onClick={() => { chooseContentTab(EContentTap.PEOPLE) }}\n            >\n                <div className=\"item-content\">\n                    <i className=\"fa fa-users\" />\n                    <p className=\"text-bold\">People</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ navigation }: IStoreState) => ({ navigation })\nconst mapDispatchToProps = { chooseContentTab }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentFooterComponent)","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { IDropdownConversationProps } from \"../interface/ComponentInterface\";\nimport { openPopup } from \"../action/AppActions\";\nimport PopupConfirmComponent from \"./PopupConfirmComponent\";\nimport socket from \"../socket\";\nimport common from \"../common\";\n\nfunction DropdownConversationComponent({ openPopup, chatroom: chatroomData }: IDropdownConversationProps) {\n    let { myChatroom, chatroom } = chatroomData\n    return (\n        <div className=\"setting_drop_content drop_content\">\n            <Button\n                variant=\"outline-secondary drop_item\"\n                onClick={() => {\n                    openPopup({\n                        body: <PopupConfirmComponent\n                            content={`Are you sure you want to delete this conversation?`}\n                            buttons={[{\n                                title: \"Ok\",\n                                primary: true,\n                                func: () => {\n                                    let sc = socket.getSocket()\n                                    if (!sc) return;\n                                    sc.transmit(common.packet.CHATROOM, { evt: common.event.CHATROOM.UNFOLLOW, data: { chatroomId: chatroom._id } })\n                                }\n                            }, { title: \"Cancel\" }]}\n                        />\n                    })\n                }}\n            >\n                Delete\n            </Button>\n            <div className=\"drop_seperate\" />\n            <Button\n                variant=\"outline-secondary drop_item\"\n                onClick={() => {\n                    // Send read\n                    let sc = socket.getSocket();\n                    if (!sc) return\n                    sc.transmit(common.packet.CHATROOM, {\n                        evt: myChatroom.read ? common.event.CHATROOM.MASK_AS_UNREAD : common.event.CHATROOM.MASK_AS_READ,\n                        data: { userChatroomId: myChatroom._id }\n                    })\n                }}\n            >\n                {\n                    myChatroom.read ? \"Mask as unread\" : \"Mask as read\"\n                }\n            </Button>\n            <Button\n                variant=\"outline-secondary drop_item\"\n                onClick={() => {\n                    // Send read\n                    let sc = socket.getSocket();\n                    if (!sc) return\n                    sc.transmit(common.packet.CHATROOM, {\n                        evt: common.event.CHATROOM.SET_ARCHIVE,\n                        data: { userChatroomId: myChatroom._id, archive: !myChatroom.archive }\n                    })\n                }}\n            >\n                {\n                    myChatroom.archive ? \"Unarchive\" : \"Archive\"\n                }\n            </Button>\n            <Button\n                variant=\"outline-secondary drop_item\"\n                onClick={() => {\n                    // Send read\n                    let sc = socket.getSocket();\n                    if (!sc) return\n                    sc.transmit(common.packet.CHATROOM, {\n                        evt: common.event.CHATROOM.SET_BLOCK,\n                        data: { userChatroomId: myChatroom._id, block: !myChatroom.block }\n                    })\n                }}\n            >\n                {\n                    myChatroom.block ? \"Unblock\" : \"Block\"\n                }\n            </Button>\n        </div>\n    )\n}\n\nexport default connect(null, { openPopup })(DropdownConversationComponent)","import React, { useState } from \"react\";\nimport AvatarComponent from \"./AvatarComponent\";\nimport util from \"../util\";\nimport { IStoreState } from \"../interface/DataInterface\";\nimport { connect } from \"react-redux\";\nimport { IItemConversationProps } from \"../interface/ComponentInterface\";\nimport { openDropdown } from \"../action/AppActions\";\nimport { setChatroomNavigation } from \"../action/NavigationActions\";\nimport DropdownConversationComponent from \"./DropdownConversationComponent\";\nimport socket from \"../socket\";\nimport common from \"../common\";\nimport { EViewType, EConversationType } from \"../common/TypeCommon\";\n\nfunction ItemConversationComponent({ data, user, friend, navigation, openDropdown, setChatroomNavigation, app, typing }: IItemConversationProps) {\n    // Props\n    let { chatroom, friendsChatroom, myChatroom } = data;\n    let { lastMessage, name, type, _id: chatroomId } = chatroom;\n    // State\n    const [hover, setHover] = useState(false);\n    // Variable\n    // -Get friend data\n    let friendsData = friendsChatroom.map(o => friend.find(oo => oo._id === o.user._id))\n    // -Check i read message\n    let read = myChatroom.read || lastMessage && (lastMessage.user as string) === user._id\n    // -Chatroom name\n    let chatroomName = chatroom.type === 'conversation' ?\n        friendsData.length > 0 && friendsData[0]?.nickname ? friendsData[0]?.nickname : `${friendsChatroom[0]?.user?.lastName} ${friendsChatroom[0]?.user?.firstName}` : name\n    // -Active\n    let active = navigation.chatroom === chatroom._id\n    // -Show typing\n    let typingData = typing[chatroom._id]\n    let showTyping = typingData && typingData.some(o => o._id !== user._id)\n    // -Time display\n    let tu = new Date(chatroom.updateTime)\n    let tn = new Date()\n    let tdisplay = \"\"\n    if (tn.getTime() - tu.getTime() < 1000 * 60 * 60 * 24 && tn.getDate() === tu.getDate()) {\n        tdisplay = `${util.string.zeroPad(tu.getHours(), 2)}:${util.string.zeroPad(tu.getMinutes(), 2)}`\n    } else {\n        tdisplay = `${tu.getDate()} Tháng ${tu.getMonth() + 1}`\n    }\n    // -Message prefix\n    let msgPrefix = lastMessage && lastMessage.user === user._id ? \"You: \" : \"\"\n    // -Check hide\n    let show = (navigation.conversationView === EConversationType.NORMAL && myChatroom.show && !myChatroom.block && !myChatroom.archive && myChatroom.active) ||\n        (navigation.conversationView === EConversationType.ARCHIVE && myChatroom.show && myChatroom.archive && myChatroom.active) ||\n        (navigation.conversationView === EConversationType.BLOCK && myChatroom.show && myChatroom.block && myChatroom.active)\n\n    const onClickItem = () => {\n        // Send read\n        let sc = socket.getSocket();\n        if (!myChatroom.read && sc) {\n            sc.transmit(common.packet.CHATROOM, {\n                evt: common.event.CHATROOM.MASK_AS_READ,\n                data: { userChatroomId: myChatroom._id }\n            })\n        }\n        // Set navigation\n        setChatroomNavigation(chatroomId)\n    }\n\n    return (\n        <div\n            className={`conversation-item px-2 ${show ? \"d-block\" : \"d-none\"}`}\n            onMouseOver={() => { setHover(true) }}\n            onMouseLeave={() => { setHover(false) }}\n        >\n            <div className={`conversation-background px-2 py-2 ${active ? \"active\" : \"\"}`}>\n                <div\n                    className=\"left\"\n                    onClick={onClickItem}\n                >\n                    <AvatarComponent\n                        online={\n                            chatroom.type !== \"conversation\" || friendsChatroom.length !== 1 || !friendsChatroom[0] ? undefined : {\n                                status: friendsChatroom[0]?.user?.online,\n                                lastOnlineTime: friendsChatroom[0]?.user?.lastOnlineTime,\n                            }\n                        }\n                        url={type === \"conversation\" && friendsChatroom.length === 1 ? friendsChatroom[0].user.avatar : undefined}\n                        size=\"medium\"\n                    />\n                    <div className=\"info ml-2\">\n                        <p className={`text-15 ${read ? \"text-bold\" : \"text-bolder\"}`}>{chatroomName}</p>\n                        <div className=\"last-message\" style={{ visibility: lastMessage ? \"visible\" : \"hidden\" }}>\n                            {\n                                showTyping ?\n                                    <div className=\"dotsContainer\">\n                                        <span id=\"dot1\"></span>\n                                        <span id=\"dot2\"></span>\n                                        <span id=\"dot3\"></span>\n                                    </div>\n                                    :\n                                    <>\n                                        <p className=\"text-bold text-light\">{`${msgPrefix}${lastMessage?.message}`}</p>\n                                        <p className=\"text-bold text-light\"><span>· </span>{` ${tdisplay}`}</p>\n                                    </>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"right\">\n                    {\n                        hover ?\n                            <button\n                                onClick={(event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n                                    let rect = ((event.target as any).getBoundingClientRect())\n                                    openDropdown(<DropdownConversationComponent chatroom={data} />, { x: app.viewType === EViewType.WINDOW ? rect.left - 10 : rect.left - 130, y: rect.bottom + 5 })\n                                }}\n                            >\n                                <i className=\"fa fa-ellipsis-h\" />\n                            </button>\n                            :\n                            !read ?\n                                <div className=\"dot\" />\n                                :\n                                lastMessage && (lastMessage.user as string) === user._id ?\n                                    <AvatarComponent\n                                        url={type === \"conversation\" && friendsChatroom.length === 1 && friendsChatroom[0].read ? friendsChatroom[0].user.avatar : undefined}\n                                        size=\"tiny\"\n                                        className={`${friendsChatroom.some(o => o.read) ? \"d-inline-flex\" : \"d-none\"}`}\n                                    />\n                                    :\n                                    <></>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(({ user, friend, navigation, app, typing }: IStoreState) => ({ user, friend, navigation, app, typing }), { openDropdown, setChatroomNavigation })(ItemConversationComponent)","import React, { useEffect, useState, ChangeEvent } from \"react\";\nimport { InputGroup, FormControl } from \"react-bootstrap\";\nimport ItemConversationComponent from \"./ItemConversation\";\nimport { connect } from \"react-redux\";\nimport { IStoreState } from \"../interface/DataInterface\";\nimport { IContentConversationProps } from \"../interface/ComponentInterface\";\nimport socket from \"../socket\";\nimport common from \"../common\";\n\nfunction ContentConversationComponent({ chatroom }: IContentConversationProps) {\n    let [loading, setLoading]: [boolean, Function] = useState(false);\n    let [search, setSearch]: [string, Function] = useState(\"\");\n    // Check scroll\n    useEffect(() => {\n        let listArea = document.getElementById('list-conversation');\n        if (listArea) {\n            listArea.addEventListener('scroll', (event) => {\n                let bottomOffset = (event.target as any).scrollTop;\n                if ((event.target as any).scrollHeight - (event.target as any).scrollTop === listArea?.clientHeight && !loading) {\n                    setLoading(true);\n                    let sc = socket.getSocket()\n                    if (sc) sc.transmit(common.packet.CHATROOM, { evt: common.event.CHATROOM.GETALLUSERCHATROOMS, data: { skip: chatroom.length } })\n                    setTimeout(() => { setLoading(false); }, 1000)\n                }\n            });\n        }\n    })\n\n    const onChangeSearch = (event: ChangeEvent<HTMLInputElement>) => {\n        setSearch(event.target.value);\n    }\n\n    let chatroomFilter = chatroom.filter(o => o.friendsChatroom.some(oo => {\n        return new RegExp(`.*${search}.*`, \"i\").test(oo.user.email) ||\n            new RegExp(`.*${search}.*`, \"i\").test(oo.user.firstName) ||\n            new RegExp(`.*${search}.*`, \"i\").test(oo.user.lastName) ||\n            new RegExp(`.*${search}.*`, \"i\").test(oo.user.nickname)\n    }))\n\n    return (\n        <div className=\"content-conversation\">\n            <div className=\"px-3 pt-2 pb-3\">\n                <InputGroup className=\"search\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text id=\"basic-addon1\">\n                            <i className=\"fa fa-search\" />\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        placeholder=\"Find on message\"\n                        aria-label=\"Username\"\n                        aria-describedby=\"basic-addon1\"\n                        onChange={onChangeSearch}\n                    />\n                </InputGroup>\n            </div>\n            <div className=\"list-conversation\" id=\"list-conversation\">\n                {\n                    chatroomFilter.map((o, i) => (\n                        <ItemConversationComponent\n                            data={o}\n                            key={i}\n                        />\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default connect(({ chatroom }: IStoreState) => ({ chatroom }))(ContentConversationComponent)","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport AvatarComponent from \"./AvatarComponent\";\nimport { IFriendRequest, IStoreState, IFriendRequestReducer } from \"../interface/DataInterface\";\nimport { connect } from \"react-redux\";\nimport socket from \"../socket\";\nimport common from \"../common\";\n\nfunction ListRequestComponent({ friendRequest }: { friendRequest: IFriendRequestReducer }) {\n    let { receive } = friendRequest;\n\n    return (\n        <div className=\"list-request\">\n            {\n                receive.map((o, i) => (\n                    <ItemRequestComponent\n                        data={o}\n                        key={i}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n\nfunction ItemRequestComponent({ data }: { data: IFriendRequest }) {\n    let { from, _id } = data;\n    let { avatar, firstName, lastName } = from\n\n    const onRefuseClick = () => {\n        let sc = socket.getSocket()\n        if (!sc) return;\n        sc.transmit(common.packet.FRIEND, { evt: common.event.FRIEND.REFUSEFRIENDREQUEST, data: { requestId: _id } })\n    }\n\n    const onAccepClick = () => {\n        let sc = socket.getSocket()\n        if (!sc) return;\n        sc.transmit(common.packet.FRIEND, { evt: common.event.FRIEND.ACCEPTFRIENDREQUEST, data: { requestId: _id } })\n    }\n\n    return (\n        <div className=\"request-item mx-3 py-3\">\n            <div className=\"d-flex align-items-center\">\n                <AvatarComponent\n                    url={avatar}\n                    size=\"normal\"\n                />\n                <p className=\"ml-2 text-normal text-18\">{`${lastName} ${firstName}`}</p>\n            </div>\n            <div>\n                <Button\n                    variant=\"outline-danger\"\n                    className=\"btn-outline-custom\"\n                    onClick={onRefuseClick}\n                >\n                    Refuse\n                </Button>\n                <Button\n                    variant=\"outline-primary\"\n                    className=\"btn-outline-custom ml-2\"\n                    onClick={onAccepClick}\n                >\n                    Accept\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(({ friendRequest }: IStoreState) => ({ friendRequest }))(ListRequestComponent)","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { IStoreState, IFriendData } from \"../interface/DataInterface\";\nimport { openPopup } from \"../action/AppActions\";\nimport AvatarComponent from \"./AvatarComponent\";\nimport PopupUserInfoComponent from \"./PopupUserInfoComponent\";\n\nfunction ListPeopleComponent({ friend }: { friend: IFriendData[] }) {\n    let friendsOnline = friend.filter(o => o.online)\n    let friendsOffline = friend.filter(o => !o.online)\n\n    return (\n        <div className=\"list-people\">\n            {\n                friendsOnline.length ?\n                    <>\n                        <p className=\"text-normal text-light text-uppercase text-12 px-3 py-2\">Active now</p>\n                        {\n                            friendsOnline.map((o, i) => (\n                                <Item\n                                    data={o}\n                                    key={i}\n                                />\n                            ))\n                        }\n                    </>\n                    :\n                    <></>\n            }\n            {\n                friendsOffline.length ?\n                    <>\n                        <p className=\"text-normal text-light text-uppercase text-12 px-3 py-2\">Friends</p>\n                        {\n                            friendsOffline.map((o, i) => (\n                                <Item\n                                    data={o}\n                                    key={i}\n                                />\n                            ))\n                        }\n                    </>\n                    :\n                    <></>\n            }\n        </div>\n    )\n}\n\nfunction PeopleItemComponent({ data, openPopup }: { data: IFriendData, openPopup: Function }) {\n    let { avatar, firstName, lastName, nickname, online, lastOnlineTime } = data;\n\n    const onClickItem = () => {\n        openPopup({ body: <PopupUserInfoComponent data={data} form=\"friend\" /> })\n    }\n\n    return (\n        <div\n            className=\"people-item px-3 py-2\"\n            style={{ cursor: \"pointer\" }}\n            onClick={onClickItem}\n        >\n            <AvatarComponent\n                url={avatar}\n                size=\"normal\"\n                online={{\n                    status: online,\n                    lastOnlineTime\n                }}\n            />\n            <p className=\"people-item-name text-normal text-18\">{\n                nickname ? nickname : `${lastName} ${firstName}`\n            }</p>\n        </div>\n    )\n}\nconst Item = connect(({ friend }: IStoreState) => ({ friend }), { openPopup })(PeopleItemComponent)\nexport default connect(({ friend }: IStoreState) => ({ friend }))(ListPeopleComponent)","import React from \"react\";\nimport { Button, Badge } from \"react-bootstrap\";\nimport { IStoreState } from \"../interface/DataInterface\";\nimport { connect } from \"react-redux\";\nimport { IContentPeopleProps } from \"../interface/ComponentInterface\";\nimport { EPeopleTap } from \"../common/TypeCommon\";\nimport { choosePeopleTab } from \"../action/NavigationActions\";\nimport ListRequestComponent from \"./ListRequestComponent\";\nimport ListPeopleComponent from \"./ListPeopleComponent\";\n\nfunction ContentPeopleComponent({ navigation, friend, friendRequest, choosePeopleTab }: IContentPeopleProps) {\n    return (\n        <div className=\"content-people\">\n            <div className=\"navigation px-3 py-2\">\n                <Button\n                    variant=\"outline-primary\"\n                    className={`btn-outline-custom ${navigation.peopleTab === EPeopleTap.PEOPLE? \"text-dark\":\"text-light\"}`}\n                    onClick={() => { choosePeopleTab(EPeopleTap.PEOPLE) }}\n                >\n                    {`Friends${friend.length ? ` (${friend.length})` : \"\"}`}\n                </Button>\n                <Button\n                    variant=\"outline-primary\"\n                    className={`btn-outline-custom ${navigation.peopleTab === EPeopleTap.REQUEST? \"text-dark\":\"text-light\"}`}\n                    onClick={() => { choosePeopleTab(EPeopleTap.REQUEST) }}\n                >\n                    {`Request${friendRequest.receive.length ? ` (${friendRequest.receive.length})` : \"\"}`}\n                </Button>\n            </div>\n            {\n                navigation.peopleTab === EPeopleTap.PEOPLE ?\n                    <ListPeopleComponent /> :\n                    navigation.peopleTab === EPeopleTap.REQUEST ?\n                        <ListRequestComponent /> :\n                        <></>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ navigation, friend, friendRequest }: IStoreState) => ({ navigation, friend, friendRequest })\nconst mapDispatchToProps = { choosePeopleTab }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentPeopleComponent)","import React, { useState } from \"react\";\nimport ContentConversationComponent from \"./ContentConversationComponent\";\nimport ContentPeopleComponent from \"./ContentPeopleComponent\";\nimport { connect } from \"react-redux\";\nimport { IStoreState } from \"../interface/DataInterface\";\nimport { IContentBodyProps } from \"../interface/ComponentInterface\";\nimport { EContentTap } from \"../common/TypeCommon\";\n\nlet timeout: NodeJS.Timeout | undefined = undefined\nfunction ContentBodyComponent({ navigation }: IContentBodyProps) {\n    let [update, setUpdate]: [number, Function] = useState(0);\n    // On drag\n    window.addEventListener('resize', (...a) => {\n        if (timeout) {\n            clearTimeout(timeout);\n            timeout = undefined;\n        }\n        timeout = setTimeout(() => {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = undefined;\n            }\n            setUpdate(Math.random())\n        }, 100);\n    })\n    let height = window.innerHeight - 54 - 56;\n\n    return (\n        <div className=\"content-body\" style={{ height: update ? height : height }}>\n            {\n                navigation.contentTab === EContentTap.CONVERSATION ?\n                    <ContentConversationComponent /> :\n                    navigation.contentTab === EContentTap.PEOPLE ?\n                        <ContentPeopleComponent /> :\n                        <></>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: IStoreState) => ({ navigation: state.navigation })\n\nexport default connect(mapStateToProps)(ContentBodyComponent)","import React from \"react\";\nimport { IFriendRequest, IFriendData } from \"../interface/DataInterface\";\nimport { Button } from \"react-bootstrap\";\nimport socket from \"../socket\";\nimport common from \"../common\";\nimport AvatarComponent from \"./AvatarComponent\";\n\nexport function ToastFriendRequestComponent({ data }: { data: IFriendRequest }) {\n    let { _id, from } = data;\n\n    const onRefuseClick = () => {\n        let sc = socket.getSocket()\n        if (!sc) return;\n        sc.transmit(common.packet.FRIEND, { evt: common.event.FRIEND.REFUSEFRIENDREQUEST, data: { requestId: _id } })\n    }\n\n    const onAccepClick = () => {\n        let sc = socket.getSocket()\n        if (!sc) return;\n        sc.transmit(common.packet.FRIEND, { evt: common.event.FRIEND.ACCEPTFRIENDREQUEST, data: { requestId: _id } })\n    }\n\n    return (\n        <div className=\"d-flex align-items-center\">\n            <div className=\"mr-2\">\n                <p className=\"text-normal\"><strong className=\"text-bold\">{`${from.lastName} ${from.firstName}`}</strong> has sent a friend request</p>\n            </div>\n            <div className=\"d-flex\">\n                <Button\n                    variant=\"danger\"\n                    className=\"text-normal py-1 px-3 text-12\"\n                    onClick={onRefuseClick}\n                >\n                    Refuse\n                </Button>\n                <Button\n                    variant=\"primary\"\n                    className=\"text-normal py-1 px-3 ml-2 text-12\"\n                    onClick={onAccepClick}\n                >\n                    Accept\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport function ToastFriendAcceptComponent({ data }: { data: IFriendData }) {\n    let { firstName, lastName, avatar } = data;\n\n    return (\n        <div className=\"d-flex align-items-center\">\n            <AvatarComponent url={avatar} size=\"small\" className=\"mr-2\" />\n            <div>\n                <p className=\"text-normal\">\n                    You have become <strong className=\"text-bold\">{`${lastName} ${firstName}'s`}</strong> friends\n                </p>\n            </div>\n        </div>\n    )\n}","/* LIBRARY */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n/* SCRIPT */\nimport socket from \"../socket\";\n/* ACTION */\nimport { pushToast } from \"../action/AppActions\";\nimport { cleanUserData } from \"../action/UserActions\";\nimport { receiveMessage, getMessages } from \"../action/MessageActions\";\nimport { getAllChatrooms, createChatroom, unfollowChatroom, updateChatroom } from \"../action/ChatroomActions\";\nimport { chooseContentTab, choosePeopleTab, setChatroomNavigation } from \"../action/NavigationActions\";\nimport { getFriend, setFriendNickName, updateFriendData, pushFriend, popFriend } from \"../action/FriendActions\";\nimport { getFriendRequest, popReceiveRequest, popSentRequest, pushReceiveRequest, pushSentRequest } from \"../action/FriendRequestActions\";\n/* INTERFACE */\nimport { IStoreState, ISocketResponseData, ISocketTransmitData, IChatroomReducerData, IMessageData } from \"../interface/DataInterface\";\nimport { IHomeContainerProps } from \"../interface/ComponentInterface\";\n/* COMPONENT */\nimport ContentChatComponent from \"../component/ContentChatComponent\";\nimport ContentHeaderComponent from \"../component/ContentHeaderComponent\";\nimport ContentFooterComponent from \"../component/ContentFooterComponent\";\nimport ContentBodyComponent from \"../component/ContentBodyComponent\";\nimport common from \"../common\";\nimport { ToastFriendRequestComponent, ToastFriendAcceptComponent } from \"../component/ToastsComponent\";\nimport { EContentTap, EPeopleTap, EViewType } from \"../common/TypeCommon\";\nimport util from \"../util\";\nimport { setTyping } from \"../action/TypingAction\";\n\nlet interval: NodeJS.Timeout | undefined = undefined\nclass HomeContainer extends Component<IHomeContainerProps> {\n    constructor(props: IHomeContainerProps) {\n        super(props);\n\n        this.socketHandle = this.socketHandle.bind(this)\n        this.getSocketData = this.getSocketData.bind(this)\n    }\n\n    UNSAFE_componentWillMount() {\n        this.socketHandle();\n    }\n\n    componentDidMount() {\n        this.getSocketData();\n    }\n\n    socketHandle() {\n        let { app, user, navigation, cleanUserData } = this.props;\n        let packet = common.packet;\n        let event = common.event;\n\n        /* __INIT__ */\n        socket.init({ deviceId: app.deviceId });\n        let sc = socket.getSocket();\n        if (!sc) return;\n        /* __LISTENER__ */\n        sc.listener('disconnect').once().then(() => {\n            cleanUserData()\n        });\n\n        /* __RECEIVE__ */\n        let { updateFriendData } = this.props;\n        (async () => {\n            for await (let data of sc.receiver(packet.FRIEND_UPDATE_DATA)) {\n                console.log(data)\n                updateFriendData(data)\n            }\n        })();\n\n        let { popReceiveRequest, popSentRequest, pushReceiveRequest, pushSentRequest, pushFriend, popFriend, pushToast, chooseContentTab, choosePeopleTab } = this.props;\n        (async () => {\n            for await (let data of sc.receiver(packet.FRIEND)) {\n                let { evt, payload } = data as ISocketTransmitData\n                console.log(evt, payload)\n                if (evt === event.FRIEND.RECEIVEFRIENDREQUEST) { //Receive transmit from server\n                    // Set on request\n                    if (payload.from._id === user._id) pushSentRequest(payload)\n                    else {\n                        pushReceiveRequest(payload)\n                        // Show toast\n                        pushToast({\n                            content: <ToastFriendRequestComponent data={payload} />,\n                            time: new Date(),\n                            onClick: () => {\n                                chooseContentTab(EContentTap.PEOPLE)\n                                choosePeopleTab(EPeopleTap.REQUEST)\n                            },\n                        })\n                    }\n                } else if (evt === event.FRIEND.REMOVEFRIENDREQUEST) { //Receive transmit from server\n                    if (payload.from._id === user._id) popSentRequest(payload)\n                    else popReceiveRequest(payload)\n                } else if (evt === event.FRIEND.ONACCEPTFRIENDREQUEST) { //Receive transmit from server\n                    // Push friend\n                    pushFriend(payload)\n                    // Toast\n                    pushToast({\n                        content: <ToastFriendAcceptComponent data={payload} />,\n                        time: new Date(),\n                    })\n                } else if (evt === event.FRIEND.ONREMOVEFRIEND) { //Receive transmit from server\n                    popFriend(payload)\n                }\n            }\n        })();\n\n        let { updateChatroom, setTyping } = this.props;\n        (async () => {\n            for await (let data of sc.receiver(packet.CHATROOM)) {\n                let { evt, payload } = data as ISocketTransmitData\n                console.log(evt, payload)\n\n                if (evt === event.CHATROOM.UPDATE) {\n                    // Navigator\n                    if (app.viewType !== EViewType.MOBILE && !navigation.chatroom) {\n                        setChatroomNavigation((payload as IChatroomReducerData).chatroom._id)\n                    }\n                    // Update chatroom\n                    updateChatroom(payload)\n                } else if (evt === event.CHATROOM.SEND_TYPING) {\n                    setTyping(payload)\n                }\n            }\n        })();\n\n        let { receiveMessage } = this.props;\n        (async () => {\n            for await (let data of sc.receiver(packet.MESSAGE)) {\n                let { evt, payload } = data as ISocketTransmitData\n                console.log(evt, payload)\n\n                if (evt === event.MESSAGE.RECEIVE) {\n                    // Play audio\n                    if (app.sound) {\n                        let audio = new Audio('./src/mp3/message.mp3')\n                        audio.play()\n                    }\n                    // Add message\n                    receiveMessage(payload)\n                }\n            }\n        })();\n\n        /* __HANDLE__ */\n        // -FRIEND\n        let { getFriend, setFriendNickName, getFriendRequest } = this.props;\n        (async () => {\n            for await (let data of sc.receiver(packet.FRIEND)) {\n                let { evt, payload } = data as ISocketResponseData\n                console.log(evt, payload)\n\n                if (evt === event.FRIEND.GET) {\n                    getFriend(payload)\n                } else if (evt === event.FRIEND.SETNICKNAME) {\n                    setFriendNickName(payload)\n                } else if (evt === event.FRIEND.REMOVE) {\n\n                } else if (evt === event.FRIEND.GETFRIENDREQUEST) {\n                    getFriendRequest(payload)\n                } else if (evt === event.FRIEND.SENDFRIENDREQUEST) {\n\n                } else if (evt === event.FRIEND.ACCEPTFRIENDREQUEST) {\n\n                } else if (evt === event.FRIEND.REFUSEFRIENDREQUEST) {\n\n                } else if (evt === event.FRIEND.CANCELFRIENDREQUEST) {\n\n                }\n            }\n        })();\n\n        // -CHAT_ROOM\n        let { getAllChatrooms, createChatroom, unfollowChatroom, setChatroomNavigation } = this.props;\n        (async () => {\n            for await (let data of sc.receiver(packet.CHATROOM)) {\n                let { evt, payload } = data as ISocketResponseData\n                console.log(evt, payload)\n\n                if (evt === event.CHATROOM.CREATE) {\n                    createChatroom(payload)\n                } else if (evt === event.CHATROOM.UNFOLLOW) {\n                    unfollowChatroom(payload)\n                } else if (evt === event.CHATROOM.INVITE) {\n\n                } else if (evt === event.CHATROOM.GETALLUSERCHATROOMS) {\n                    getAllChatrooms(payload)\n                    if (payload.data && payload.data.length && app.viewType === EViewType.WINDOW)\n                        setChatroomNavigation((payload.data as IChatroomReducerData[])[0].chatroom._id)\n                }\n            }\n        })();\n\n        // -MESSAGE\n        let { getMessages } = this.props;\n        (async () => {\n            for await (let data of sc.receiver(packet.MESSAGE)) {\n                let { evt, payload } = data as ISocketResponseData\n                console.log(evt, payload)\n\n                if (evt === event.MESSAGE.GET) {\n                    getMessages(payload)\n                }\n            }\n        })();\n    }\n\n    getSocketData() {\n        let packet = common.packet;\n        let event = common.event;\n        let sc = socket.getSocket();\n        if (!sc) return;\n\n        sc.transmit(packet.FRIEND, { evt: event.FRIEND.GET })\n        sc.transmit(packet.FRIEND, { evt: event.FRIEND.GETFRIENDREQUEST })\n        sc.transmit(packet.CHATROOM, { evt: event.CHATROOM.GETALLUSERCHATROOMS })\n    }\n\n    render() {\n        let { app, navigation } = this.props;\n        // Change tabview\n        if (interval) {\n            clearTimeout(interval);\n            interval = undefined;\n        }\n        if (app.unreadChatroom) {\n            // Fav icon\n            util.common.changeFAVIcon('./src/images/icon-noti.svg')\n            // Change title\n            interval = setInterval(() => {\n                document.title = document.title !== common.config.APP_NAME ? common.config.APP_NAME : \"You have received a new message\";\n            }, 1000)\n        } else {\n            // Fav icon\n            util.common.changeFAVIcon('./src/images/icon.svg')\n            // Change title\n            document.title = common.config.APP_NAME;\n        }\n\n        // Render\n        return (\n            <div className=\"home\">\n                {\n                    app.viewType === EViewType.MOBILE ?\n                        <>\n                            {\n                                navigation.chatroom ?\n                                    <ContentChatComponent />\n                                    :\n                                    <div className=\"content\">\n                                        <ContentHeaderComponent />\n                                        <ContentBodyComponent />\n                                        <ContentFooterComponent />\n                                    </div>\n                            }\n                        </>\n                        :\n                        <>\n                            <div className=\"content\">\n                                <ContentHeaderComponent />\n                                <ContentBodyComponent />\n                                <ContentFooterComponent />\n                            </div>\n                            <ContentChatComponent />\n                        </>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ app, user, navigation }: IStoreState) => ({\n    app,\n    user,\n    navigation\n})\n\nconst mapDispatchToProps = {\n    cleanUserData,\n    getFriend,\n    setFriendNickName,\n    updateFriendData,\n    getFriendRequest,\n    popReceiveRequest,\n    popSentRequest,\n    pushReceiveRequest,\n    pushSentRequest,\n    pushFriend,\n    popFriend,\n    pushToast,\n    chooseContentTab,\n    choosePeopleTab,\n    getAllChatrooms,\n    createChatroom,\n    unfollowChatroom,\n    updateChatroom,\n    receiveMessage,\n    getMessages,\n    setChatroomNavigation,\n    setTyping\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer);","import common from \"../common\";\nimport { IPayloadData, IFriendData } from \"../interface/DataInterface\";\n\nexport function getFriend({ success, data, message }: IPayloadData) {\n    return async function (dispatch: Function) {\n        // Check data\n        if (!success) {\n            console.log(message)\n        } else {\n            // Dispatch action\n            dispatch({\n                type: common.action.FRIEND_GET,\n                payload: data\n            })\n        }\n    }\n}\n\nexport function pushFriend(data: IFriendData) {\n    return {\n        type: common.action.FRIEND_PUSH,\n        payload: data\n    }\n}\n\nexport function popFriend(data: IFriendData) {\n    return {\n        type: common.action.FRIEND_POP,\n        payload: data\n    }\n}\n\nexport function setFriendNickName({ success, data, message }: IPayloadData) {\n    return async function (dispatch: Function) {\n        // Check data\n        if (!success) {\n            console.log(message)\n        } else {\n            // Dispatch action\n            dispatch({\n                type: common.action.FRIEND_SETNICKNAME,\n                payload: data\n            })\n        }\n    }\n}\n\nexport function updateFriendData(data: IFriendData) {\n    return async function (dispatch: Function) {\n        dispatch({\n            type: common.action.FRIEND_UPDATE_DATA,\n            payload: data\n        })\n    }\n}","import common from \"../common\";\nimport { IPayloadData, IFriendRequest } from \"../interface/DataInterface\";\n\nexport function getFriendRequest({ success, data, message }: IPayloadData) {\n    return async function (dispatch: Function) {\n        // Check data\n        if (!success) {\n            console.log(message)\n        } else {\n            // Dispatch action\n            dispatch({\n                type: common.action.FRIENDREQUEST_GET,\n                payload: data\n            })\n        }\n    }\n}\n\nexport function pushReceiveRequest(data: IFriendRequest) {\n    return {\n        type: common.action.FRIENDREQUEST_PUSH_RECEVICE,\n        payload: data\n    }\n}\n\nexport function pushSentRequest(data: IFriendRequest) {\n    return {\n        type: common.action.FRIENDREQUEST_PUSH_SENT,\n        payload: data\n    }\n}\n\nexport function popReceiveRequest(data: IFriendRequest) {\n    return {\n        type: common.action.FRIENDREQUEST_POP_RECEVICE,\n        payload: data\n    }\n}\n\nexport function popSentRequest(data: IFriendRequest) {\n    return {\n        type: common.action.FRIENDREQUEST_POP_SENT,\n        payload: data\n    }\n}\n","import common from \"../common\";\nimport { IPayloadData, IChatroomReducerData } from \"../interface/DataInterface\";\nimport { setChatroomNavigation } from \"./NavigationActions\";\nimport { setUnreadChatroom } from \"./AppActions\";\n\nexport function createChatroom({ success, data, message }: IPayloadData) {\n    return async function (dispatch: Function) {\n        if (!success) {\n            console.log(message)\n        } else if (data && (data as IChatroomReducerData).chatroom) {\n            let chatroomData: IChatroomReducerData = data;\n            // Set chat room\n            dispatch(setChatroomNavigation(chatroomData.chatroom._id))\n            // Create\n            dispatch({\n                type: common.action.CHATROOM_CREATE,\n                payload: data\n            })\n        }\n    }\n}\n\nexport function updateChatroom(data: IChatroomReducerData) {\n    return async function (dispatch: Function) {\n        dispatch(setUnreadChatroom(!data.myChatroom.read))\n\n        dispatch({\n            type: common.action.CHATROOM_UPDATE,\n            payload: data\n        })\n    }\n}\n\nexport function unfollowChatroom({ success, data, message }: IPayloadData) {\n    return async function (dispatch: Function) {\n        if (!success) {\n            console.log(message)\n        } else {\n            dispatch({\n                type: common.action.CHATROOM_UNFOLLOW,\n                payload: data\n            })\n        }\n    }\n}\n\nexport function inviteChatroom({ success, data, message }: IPayloadData) {\n    return async function (dispatch: Function) {\n        if (!success) {\n            console.log(message)\n        } else {\n            dispatch({\n                type: common.action.CHATROOM_INVITE,\n                payload: data\n            })\n        }\n    }\n}\n\nexport function getAllChatrooms({ success, data, message }: IPayloadData) {\n    return async function (dispatch: Function) {\n        if (!success) {\n            console.log(message)\n        } else {\n            // Dispatch\n            dispatch({\n                type: common.action.CHATROOM_GETALLUSERCHATROOMS,\n                payload: data\n            })\n        }\n    }\n}","import common from \"../common\";\nimport { IMessageData, IPayloadData } from \"../interface/DataInterface\";\n\nexport function receiveMessage(message: IMessageData) {\n    return async function (dispatch: Function) {\n        dispatch({\n            type: common.action.MESSAGE_RECEIVE,\n            payload: message\n        })\n    }\n}\n\nexport function getMessages({ success, data, message }: IPayloadData) {\n    return async function (dispatch: Function) {\n        // Check data\n        if (!success) {\n            console.log(message)\n        } else {\n            // Dispatch action\n            dispatch({\n                type: common.action.MESSAGE_GET,\n                payload: data\n            })\n        }\n    }\n}","import common from \"../common\";\n\nexport function setTyping(payload: any) {\n    return async function (dispatch: Function) {\n        dispatch({\n            type: common.action.TYPING,\n            payload: payload\n        })\n    }\n}\n","import React, { Component, ChangeEvent, RefObject } from \"react\";\nimport { login, register } from \"../action/UserActions\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, ButtonGroup, Tooltip, Overlay } from \"react-bootstrap\";\nimport { ELoginViewType } from \"../common/TypeCommon\";\nimport { ILoginContainerProps, ILoginContainerState } from \"../interface/ComponentInterface\";\nimport util from \"../util\";\n\nclass LoginContainer extends Component<ILoginContainerProps, ILoginContainerState> {\n    emailRef: RefObject<HTMLInputElement> | undefined;\n    passwordRef: RefObject<HTMLInputElement> | undefined;\n    confirmpasswordRef: RefObject<HTMLInputElement> | undefined;\n    firstNameRef: RefObject<HTMLInputElement> | undefined;\n    lastNameRef: RefObject<HTMLInputElement> | undefined;\n\n    constructor(props: ILoginContainerProps) {\n        super(props)\n\n        this.state = {\n            viewType: ELoginViewType.SIGNIN,\n            email: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            isEmailFail: \"\",\n            isPasswordFail: \"\",\n            isConfirmPasswordFail: \"\",\n            isFirstNameFail: \"\",\n            isLastNameFail: \"\",\n        }\n        this.emailRef = React.createRef();\n        this.passwordRef = React.createRef();\n        this.confirmpasswordRef = React.createRef();\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\n        this.onChangeLastName = this.onChangeLastName.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onChangeComfirmPassword = this.onChangeComfirmPassword.bind(this);\n        this.onBlurEmail = this.onBlurEmail.bind(this);\n        this.onBlurPassword = this.onBlurPassword.bind(this);\n        this.onBlurConfirmPassword = this.onBlurConfirmPassword.bind(this);\n        this.onBlurFirstName = this.onBlurFirstName.bind(this);\n        this.onBlurLastName = this.onBlurLastName.bind(this);\n        this.onClickSetViewType = this.onClickSetViewType.bind(this);\n        this.onLoginSubmit = this.onLoginSubmit.bind(this);\n    }\n\n    onChangeEmail(event: ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            email: event.target.value\n        })\n    }\n\n    onChangeFirstName(event: ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            firstName: event.target.value\n        })\n    }\n\n    onChangeLastName(event: ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            lastName: event.target.value\n        })\n    }\n\n    onChangePassword(event: ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    onChangeComfirmPassword(event: ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            confirmPassword: event.target.value\n        })\n    }\n\n    onBlurEmail(event: ChangeEvent<HTMLInputElement>) {\n        let check = util.common.validateEmail(event.target.value)\n        this.setState({\n            isEmailFail: check ? \"\" : \"Invalid email format\"\n        })\n    }\n\n    onBlurPassword(event: ChangeEvent<HTMLInputElement>) {\n        let value = event.target.value;\n        let check = value.length >= 8 || value.length <= 32\n        this.setState({\n            isPasswordFail: check ? \"\" : \"Password length must be 8 character or more\"\n        })\n    }\n\n    onBlurConfirmPassword(event: ChangeEvent<HTMLInputElement>) {\n        let value = event.target.value;\n        let check = value.length >= 8 || value.length <= 32\n        this.setState({\n            isConfirmPasswordFail: check ? \"\" : \"Confirm password length must be 8 character or more\"\n        })\n    }\n\n    onBlurFirstName(event: ChangeEvent<HTMLInputElement>) {\n        let value = event.target.value;\n        let check = value.length ? true : false\n        this.setState({\n            isFirstNameFail: check ? \"\" : \"First name required\"\n        })\n    }\n\n    onBlurLastName(event: ChangeEvent<HTMLInputElement>) {\n        let value = event.target.value;\n        let check = value.length ? true : false\n        this.setState({\n            isLastNameFail: check ? \"\" : \"Last name required\"\n        })\n    }\n\n    onClickSetViewType(type: ELoginViewType) {\n        this.setState({\n            viewType: type,\n            email: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            isEmailFail: \"\",\n            isPasswordFail: \"\",\n            isConfirmPasswordFail: \"\",\n            isFirstNameFail: \"\",\n            isLastNameFail: \"\",\n        })\n    }\n\n    onLoginSubmit(event: React.FormEvent<HTMLFormElement>) {\n        let { email, password, confirmPassword, firstName, lastName, viewType } = this.state;\n        // Prevent\n        event.preventDefault();\n\n        // Check password\n        if (password.length < 8 || password.length > 32) {\n            this.setState({ isPasswordFail: \"Password length must be 8 character or more\" })\n            return\n        } else if (viewType === ELoginViewType.SIGNUP && password !== confirmPassword) {\n            this.setState({ isConfirmPasswordFail: \"Password confirmation doesn't match password\" })\n            return\n        }\n\n        // Handle\n        if (viewType === ELoginViewType.SIGNIN) {\n            this.props.login(email, password)\n        } else if (viewType === ELoginViewType.SIGNUP) {\n            this.props.register({ email, password, confirmPassword, firstName, lastName })\n        }\n    }\n\n    render() {\n        let { viewType, email, firstName, lastName, password, confirmPassword, isEmailFail, isConfirmPasswordFail, isFirstNameFail, isLastNameFail, isPasswordFail } = this.state;\n\n        return (\n            <div className=\"login\">\n                <div className=\"content\">\n                    <div className=\"icon  mb-2\">\n                        <i className=\"fa fa-paper-plane\"></i>\n                    </div>\n                    <h1 className=\"text-40 mb-4\"> Messenger </h1>\n                    <h2 className=\"text-16 mb-3 text-normal\"> Instantly connect with people in your life </h2>\n                    <p className=\"text-16  mb-4 text-normal\"> Sign in to get started. </p>\n                    <Form className=\"input\" onSubmit={this.onLoginSubmit}>\n                        <ButtonGroup aria-label=\"Basic example\">\n                            <Button variant=\"outline-primary\" className={`btn-left text-17 ${viewType === ELoginViewType.SIGNIN ? \"text-bolder\" : \"text-normal\"}`} block onClick={() => { this.onClickSetViewType(ELoginViewType.SIGNIN) }}>Sign in</Button>\n                            <Button variant=\"outline-primary\" className={`btn-right text-17 ${viewType === ELoginViewType.SIGNUP ? \"text-bolder\" : \"text-normal\"}`} block onClick={() => { this.onClickSetViewType(ELoginViewType.SIGNUP) }}>Sign up</Button>\n                        </ButtonGroup>\n                        <Form.Group controlId=\"formBasicEmail\" className=\"form-middle\">\n                            <Form.Control\n                                type=\"email\"\n                                placeholder=\"Email\"\n                                className={`text-17 ${isEmailFail ? \"invalid\" : \"\"}`}\n                                value={email}\n                                ref={this.emailRef}\n                                onChange={this.onChangeEmail}\n                                onBlur={this.onBlurEmail}\n                            />\n                            <Overlay target={this.emailRef as RefObject<HTMLInputElement>} show={isEmailFail ? true : false} placement=\"right\">\n                                <Tooltip id=\"email-tool-tip\">\n                                    {isEmailFail}\n                                </Tooltip>\n                            </Overlay>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicPassword\" className={`${viewType === ELoginViewType.SIGNIN ? \"d-none\" : \"\"} form-middle`}>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"First name\"\n                                className={`text-17 form-left ${isFirstNameFail ? \"invalid\" : \"\"}`}\n                                value={firstName}\n                                ref={this.firstNameRef}\n                                onChange={this.onChangeFirstName}\n                                onBlur={this.onBlurFirstName}\n                            />\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Last name\"\n                                className={`text-17 form-right ${isLastNameFail ? \"invalid\" : \"\"}`}\n                                value={lastName}\n                                ref={this.lastNameRef}\n                                onChange={this.onChangeLastName}\n                                onBlur={this.onBlurLastName}\n                            />\n                            <Overlay target={this.lastNameRef as RefObject<HTMLInputElement>} show={isLastNameFail || isFirstNameFail ? true : false} placement=\"right\">\n                                <Tooltip id=\"ln-tool-tip\">\n                                    {isFirstNameFail ? isFirstNameFail : isLastNameFail ? isLastNameFail : \"\"}\n                                </Tooltip>\n                            </Overlay>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicPassword\" className={`${viewType === ELoginViewType.SIGNIN ? \"form-bottom\" : \"form-middle\"}`}>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                className={`text-17`}\n                                value={password}\n                                ref={this.passwordRef}\n                                onChange={this.onChangePassword}\n                                onBlur={this.onBlurPassword}\n                            />\n                            <Overlay target={this.passwordRef as RefObject<HTMLInputElement>} show={isPasswordFail ? true : false} placement=\"right\">\n                                <Tooltip id=\"pw-tool-tip\">\n                                    {isPasswordFail}\n                                </Tooltip>\n                            </Overlay>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicPassword\" className={`${viewType === ELoginViewType.SIGNIN ? \"d-none\" : \"\"} form-bottom`}>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Confirm password\"\n                                className={`text-17`}\n                                value={confirmPassword}\n                                ref={this.confirmpasswordRef}\n                                onChange={this.onChangeComfirmPassword}\n                                onBlur={this.onBlurConfirmPassword}\n                            />\n                            <Overlay target={this.confirmpasswordRef as RefObject<HTMLInputElement>} show={isConfirmPasswordFail ? true : false} placement=\"right\">\n                                <Tooltip id=\"cfpw-tool-tip\">\n                                    {isConfirmPasswordFail}\n                                </Tooltip>\n                            </Overlay>\n                        </Form.Group>\n                        <Button variant=\"link\" type=\"submit\" className=\"text-23 text-primary mb-4\">\n                            Continue\n                        </Button>\n                        {/* <Form.Group controlId=\"formBasicCheckbox\">\n                            <Form.Check type=\"checkbox\" label=\"Duy trì đăng nhập\" />\n                        </Form.Group> */}\n                    </Form>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    login, register\n}\n\nexport default connect(null, mapDispatchToProps)(LoginContainer);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IStoreState, IUserData } from \"../interface/DataInterface\";\nimport { verify } from \"../action/UserActions\";\nimport * as api from \"../Api\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\ninterface IProps {\n    user: IUserData\n    verify: Function\n}\n\ninterface IState {\n    verifying: boolean,\n}\n\nclass VerificationContainer extends Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            verifying: false,\n        }\n\n        this.onClickResend = this.onClickResend.bind(this)\n    }\n\n    async UNSAFE_componentWillMount() {\n        // Check uuid on params for verify\n        let uuid = document.location.pathname.split('/').filter(o => o)[1]\n        if (uuid) {\n            this.setState({ verifying: true })\n            await this.props.verify(uuid);\n            this.setState({ verifying: false })\n        }\n    }\n\n    async onClickResend() {\n        await api.resendVerify()\n    }\n\n    render() {\n        let { user } = this.props;\n        let { verifying } = this.state;\n\n        return (\n            <div className=\"verify\">\n                <div className=\"verify-content\">\n                    {\n                        verifying ?\n                            <></>\n                            :\n                            <>\n                                {\n                                    !user.emailVerify.verified ?\n                                        <>\n                                            <i className=\"fa fa-times-circle d-block text-center text-danger\" style={{ fontSize: \"120px\" }} />\n                                            <p className=\"text-30 text-normal mb-3\">Your account hasn't been verify</p>\n                                            <Button\n                                                className=\"text-16 text-normal\"\n                                                block\n                                                onClick={this.onClickResend}\n                                            >\n                                                Resend\n                                            </Button>\n                                        </> :\n                                        <>\n                                            <i className=\"fa fa-check-circle d-block text-center text-success\" style={{ fontSize: \"120px\" }} />\n                                            <p className=\"text-30 text-normal mb-3\">Your account has verified</p>\n                                            <Link to=\"/\" className=\"d-block text-16 text-normal text-center\">\n                                                Go to home page\n                                            </Link>\n                                        </>\n                                }\n                            </>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: IStoreState) => ({\n    user: state.user\n})\n\nconst mapDispatchToProps = {\n    verify\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VerificationContainer);","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { IStoreState, IUserData } from \"../interface/DataInterface\";\nimport HomeContainer from \"../container/HomeContainer\";\nimport LoginContainer from \"../container/LoginContainer\";\nimport VerificationContainer from \"../container/VerificationContainer\";\n\nfunction ContainerRouter({ user }: { user: IUserData }) {\n    return (\n        <Switch>\n            <Route path=\"/login\">\n                <LoginContainer />\n            </Route>\n            <Route path=\"/\" exact>\n                <HomeContainer />\n            </Route>\n            <Route path=\"/verify\">\n                <VerificationContainer />\n            </Route>\n        </Switch>\n    )\n}\n\nconst mapPropsToState = (state: IStoreState) => ({\n    user: state.user\n})\n\nexport default connect(mapPropsToState)(ContainerRouter)","import React, { useState } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { IStoreState, IUserData } from \"../interface/DataInterface\";\nimport { token } from \"../action/UserActions\";\nimport ContainerRouter from \"./ContainerRouter\";\nimport * as api from \"../Api\";\n\nfunction AuthRouter({ user, token }: { user: IUserData, token: Function }) {\n    let [fail, setFail] = useState(false)\n    // Check login token\n    if (!user.email && api.getHeaders().authorization && api.getHeaders().deviceId && !fail) {\n        token().catch(()=>setFail(true))\n        return (<div></div>)\n    }\n    // Check login normal\n    else {\n        return (\n            <Switch>\n                <Route path=\"/login\">\n                    {\n                        user.email ? <Redirect to=\"/\" /> : <ContainerRouter />\n                    }\n                </Route>\n                <Route path=\"/verify\">\n                    {\n                        !user.email ? <Redirect to=\"/login\" /> : <ContainerRouter />\n                    }\n                </Route>\n                <Route path=\"/\">\n                    {\n                        !user.email ? <Redirect to=\"/login\" /> : !user.emailVerify.verified ? <Redirect to=\"/verify\" /> : <ContainerRouter />\n                    }\n                </Route>\n            </Switch>\n        )\n    }\n}\n\nconst mapPropsToState = (state: IStoreState) => ({\n    user: state.user\n})\n\nconst mapDispatchToState = {\n    token\n}\n\nexport default connect(mapPropsToState, mapDispatchToState)(AuthRouter)","import React, { useState } from \"react\";\nimport { Toast } from \"react-bootstrap\";\nimport _ from \"underscore\";\nimport util from \"../util\";\nimport { IToastItemProps } from \"../interface/ComponentInterface\";\n\nfunction ToastItemComponent(props: IToastItemProps) {\n    let { content, time, autohide, onClick } = props\n    const [show, setShow] = useState(true);\n    const [onHorver, setOnHorver] = useState(false);\n    const [now] = useState(Date.now())\n    // Time handle\n    let timeSpace = now - time.getTime();\n    let timeString = util.string.milisecondsToTimeString(timeSpace);\n    let timeAgo = timeSpace < 5000 ? timeString : `${timeString} ago`\n\n    return (\n        <Toast\n            onClick={() => {\n                // Set show\n                setShow(false)\n                //Handle\n                if (_.isFunction(onClick)) onClick()\n            }}\n            onClose={() => {\n                // Set show\n                setShow(false)\n                //Handle\n                if (_.isFunction(onClick)) onClick()\n            }}\n            onMouseEnter={() => {\n                setOnHorver(true)\n            }}\n            onMouseLeave={() => {\n                setOnHorver(false)\n            }}\n            show={show}\n            style={{ cursor: \"pointer\" }}\n            delay={_.isNumber(autohide) ? autohide : 4000}\n            autohide={onHorver ? false : true}\n        >\n            <Toast.Body>\n                <div>{content}</div>\n                <small>{timeAgo}</small>\n            </Toast.Body>\n        </Toast>\n    )\n}\n\nexport default ToastItemComponent","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IStoreState, IAppData } from \"../interface/DataInterface\";\nimport { pushToast } from \"../action/AppActions\";\nimport ToastItemComponent from \"./ToastItemComponent\";\n\ninterface IProps {\n    app: IAppData\n    pushToast: Function\n}\n\ninterface IState {\n    elements: JSX.Element[]\n}\n\nclass ToastContainComponent extends Component<IProps, IState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = { elements: [] }\n    }\n\n    shouldComponentUpdate(nextProps: IProps) {\n        if (nextProps.app.toast && nextProps.app.notification) {\n            let { content, time, onClick, autohide } = nextProps.app.toast\n            let { elements } = this.state\n            // Play sound\n            if (nextProps.app.sound) {\n                let audio = new Audio('./src/mp3/notification.mp3')\n                audio.play()\n            }\n            // Set state\n            this.setState({\n                elements: [...elements, <ToastItemComponent content={content} time={time} onClick={onClick} autohide={autohide} key={elements.length} />]\n            })\n            this.props.pushToast(undefined)\n            return false\n        }\n        return true\n    }\n\n    render() {\n        return (\n            <div className=\"toast_contain\">\n                {this.state.elements}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ app }: IStoreState) => ({ app })\nconst mapDispatchToProps = { pushToast }\nexport default connect(mapStateToProps, mapDispatchToProps)(ToastContainComponent)","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IStoreState, IAppData } from \"../interface/DataInterface\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { closePopup } from \"../action/AppActions\";\nimport _ from \"underscore\";\n\ninterface IProps {\n    app: IAppData,\n    closePopup: Function\n}\n\nfunction PopupContainComponent({ app, closePopup }: IProps) {\n    let { show, body, header, openRecent } = app.popup;\n    if (!body) show = false;\n\n    return (\n        <Modal\n            show={show}\n            onHide={() => { closePopup(openRecent) }}\n            dialogClassName=\"popup\"\n            centered\n        >\n            <Modal.Body>\n                {\n                    header ?\n                        <div className=\"popup-header px-1\">\n                            <Button\n                                variant=\"link text-16\"\n                                onClick={() => {\n                                    if (header && typeof header?.btnLeft?.func === 'function') {\n                                        header.btnLeft.func()\n                                    }\n                                    closePopup(openRecent)\n                                }}\n                                style={{\n                                    visibility: header?.btnLeft ? \"visible\" : \"hidden\"\n                                }}\n                            >\n                                {\n                                    header?.btnLeft?.title ? header?.btnLeft?.title : \"Cancel\"\n                                }\n                            </Button>\n                            <div className=\"title text-16\">{header.title}</div>\n                            <Button\n                                variant=\"link text-16\"\n                                onClick={() => {\n                                    if (header && typeof header?.btnRight?.func === 'function') {\n                                        header.btnRight.func()\n                                    }\n                                    closePopup(openRecent)\n                                }}\n                                style={{\n                                    visibility: header?.btnRight ? \"visible\" : \"hidden\"\n                                }}\n                            >\n                                {\n                                    header?.btnRight?.title ? header?.btnRight?.title : \"Done\"\n                                }\n                            </Button>\n                        </div>\n                        :\n                        <></>\n                }\n                <div className=\"popup-content\">\n                    {body}\n                </div>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = ({ app }: IStoreState) => ({ app })\nconst mapDispatchToProps = { closePopup }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PopupContainComponent)","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { closeDialog } from \"../action/AppActions\";\nimport { IStoreState, IAppData } from \"../interface/DataInterface\";\n\nfunction DropdownContainComponent({ app, closeDialog }: { app: IAppData, closeDialog: Function }) {\n    return (\n        <div\n            className={`drop_contain ${app.dropdown ? \"d-block\" : \"d-none\"}`}\n            onClick={() => { closeDialog() }}\n        >\n            <div\n                className=\"drop_wrap\"\n                style={{\n                    top: `${app.dropdown?.position.y || 0}px`,\n                    left: `${app.dropdown?.position.x || 0}px`,\n                }}\n            >\n                {app.dropdown?.content}\n            </div>\n        </div>\n    )\n}\n\nexport default connect(({ app }: IStoreState) => ({ app }), { closeDialog })(DropdownContainComponent)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { initialize, setAppViewType } from \"./action/AppActions\";\nimport AuthRouter from \"./router/AuthRouter\";\nimport * as api from \"./Api\";\nimport ToastContainComponent from \"./component/ToastContainComponent\";\nimport PopupContainComponent from \"./component/PopupContainComponent\";\nimport DropdownContainComponent from \"./component/DropdownContainComponent\";\nimport { IStoreState, IAppData } from \"./interface/DataInterface\";\nimport { EViewType } from \"./common/TypeCommon\";\n\ninterface IProps {\n    initialize: Function,\n    setAppViewType: Function,\n    app: IAppData\n}\n\nlet timeout: NodeJS.Timeout | undefined = undefined\nclass App extends Component<IProps> {\n    constructor(props: IProps) {\n        super(props)\n        this.state = { update: 0 }\n    }\n\n    /* Life circle */\n    UNSAFE_componentWillMount() {\n        // Api initialize\n        api.initialize()\n        // App initialize\n        this.props.initialize();\n        // Set view type\n        this.props.setAppViewType(window.innerWidth <= 575.98 ? EViewType.MOBILE : EViewType.WINDOW)\n        window.addEventListener('resize', (event) => {\n            window.addEventListener('resize', (...a) => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = undefined;\n                }\n                timeout = setTimeout(() => {\n                    if (timeout) {\n                        clearTimeout(timeout);\n                        timeout = undefined;\n                    }\n                    let type = (event.target as any)?.innerWidth <= 575.98 ? EViewType.MOBILE : EViewType.WINDOW\n                    if (this.props.app.viewType !== type) this.props.setAppViewType(type)\n                }, 100);\n            })\n        })\n    }\n\n    /* Render */\n    render() {\n        return (\n            <>\n                <AuthRouter />\n                <DropdownContainComponent />\n                <PopupContainComponent />\n                <ToastContainComponent />\n            </>\n        )\n    }\n}\n\nconst mapDispatchToProps = { initialize, setAppViewType }\n\nexport default connect(({ app }: IStoreState) => ({ app }), mapDispatchToProps)(App);","import common from \"../common\";\nimport { IUserData } from \"../interface/DataInterface\";\n\nlet initializeState: IUserData = {\n    _id: '',\n    email: '',\n    emailVerify: { verified: false }\n}\n\nexport default function (state = initializeState, action: { type: string, payload: any }) {\n    switch (action.type) {\n        case common.action.LOGIN:\n            return Object.assign({}, state, action.payload);\n        case common.action.REGISTER:\n            return Object.assign({}, state, action.payload);\n        case common.action.TOKEN:\n            return Object.assign({}, state, action.payload);\n        case common.action.UPDATE_USER_DATA:\n            return Object.assign({}, state, action.payload);\n        case common.action.CLEAN_USER_DATA:\n            return { _id: '', email: '', emailVerify: { verified: false } } as IUserData;\n        case common.action.VERIFY:\n            return Object.assign({}, state, { emailVerify: { verified: true } });\n        case common.action.LOGOUT:\n            return Object.assign({}, state, { email: '' });\n        default:\n            return state;\n    }\n}","import common from \"../common\";\nimport { IAppData } from \"../interface/DataInterface\";\nimport { EViewType } from \"../common/TypeCommon\";\n\nlet initializeState: IAppData = {\n    lang: 'en',\n    deviceId: '',\n    viewType: EViewType.WINDOW,\n    unreadChatroom: false,\n    notification: true,\n    sound: true,\n    toast: undefined,\n    popup: {}\n}\n\nexport default function (state = initializeState, action: { type: string, payload: any }) {\n    switch (action.type) {\n        case common.action.INITIALIZE:\n            return Object.assign({}, state, action.payload);\n        case common.action.SET_VIEW_TYPE:\n            return Object.assign({}, state, { viewType: action.payload });\n        case common.action.SET_UNREAD_STATE:\n            return Object.assign({}, state, { unreadChatroom: action.payload });\n        case common.action.PUSH_TOAST:\n            return Object.assign({}, state, { toast: action.payload });\n        case common.action.TOGGLE_SOUND:\n            return Object.assign({}, state, { sound: action.payload });\n        case common.action.TOGGLE_NOTIFICATION:\n            return Object.assign({}, state, { notification: action.payload });\n        case common.action.CLOSE_POPUP:\n            return Object.assign({}, state, {\n                popup: action.payload && state.popupBackup ? Object.assign({}, state.popupBackup) : Object.assign({}, state.popup, { show: false })\n            });\n        case common.action.OPEN_POPUP:\n            return Object.assign({}, state, {\n                popup: Object.assign(action.payload, { show: true }),\n                popupBackup: Object.assign({}, state.popup, { show: true })\n            });\n        case common.action.CLOSE_DIALOG:\n            return Object.assign({}, state, { dropdown: undefined })\n        case common.action.OPEN_DIALOG:\n            return Object.assign({}, state, { dropdown: action.payload })\n        default:\n            return state;\n    }\n}","import common from \"../common\";\nimport { INavigatorData } from \"../interface/DataInterface\";\nimport { EPeopleTap, EContentTap, EConversationType } from \"../common/TypeCommon\";\n\nlet initializeState: INavigatorData = {\n    contentTab: EContentTap.CONVERSATION,\n    peopleTab: EPeopleTap.PEOPLE,\n    conversationView: EConversationType.NORMAL\n}\n\nexport default function (state = initializeState, action: { type: string, payload: any }) {\n    switch (action.type) {\n        case common.action.CHOOSE_CONTENT_TAB:\n            return Object.values(EContentTap).includes(action.payload) ? Object.assign({}, state, { contentTab: action.payload }) : state;\n        case common.action.CHOOSE_PEOPLE_TAB:\n            return Object.values(EPeopleTap).includes(action.payload) ? Object.assign({}, state, { peopleTab: action.payload }) : state;\n        case common.action.NAVIGATOR_SET_CHATROOM:\n            return Object.assign({}, state, { chatroom: action.payload })\n        case common.action.SET_CONVERSATION_VIEW:\n            return Object.assign({}, state, { conversationView: action.payload })\n        default:\n            return state;\n    }\n}","import common from \"../common\";\nimport { IFriendData } from \"../interface/DataInterface\";\nimport _ from \"underscore\";\n\nlet initializeState: IFriendData[] = []\n\nexport default function (state = initializeState, { type, payload }: { type: string, payload: any }) {\n    if (type === common.action.FRIEND_GET) {\n        return _.isArray(payload) ? payload : [];\n    } else if (type === common.action.FRIEND_PUSH) {\n        return [payload, ...state]\n    } else if (type === common.action.FRIEND_POP) {\n        let nstate = [...state]\n        let friendIndex = nstate.findIndex(o => o._id === (payload as IFriendData)._id)\n        if (_.isNumber(friendIndex) && friendIndex !== -1) {\n            nstate.splice(friendIndex, 1)\n            return nstate;\n        }\n    } else if (type === common.action.FRIEND_SETNICKNAME) {\n        let nstate = [...state]\n        let data = nstate.find(o => o._id === payload.friendId);\n        if (data && _.isString(payload.nickname)) {\n            data.nickname = payload.nickname;\n            return nstate\n        }\n    } else if (type === common.action.FRIEND_UPDATE_DATA) {\n        let nstate = [...state]\n        let friendIndex = nstate.findIndex(o => o._id === (payload as IFriendData)._id)\n        if (_.isNumber(friendIndex) && friendIndex !== -1) {\n            nstate.splice(friendIndex, 1, payload)\n            return nstate;\n        }\n    }\n    return state\n}","import common from \"../common\";\nimport { IFriendRequest } from \"../interface/DataInterface\";\nimport _ from \"underscore\";\n\nlet initializeState: {\n    receive: IFriendRequest[],\n    sent: IFriendRequest[]\n} = {\n    receive: [],\n    sent: []\n}\n\nexport default function (state = initializeState, { type, payload }: { type: string, payload: any }) {\n    if (type === common.action.FRIENDREQUEST_GET) {\n        return _.isEqual(_.allKeys(payload), [\"receive\", \"sent\"]) ? payload : state;\n    } else if (type === common.action.FRIENDREQUEST_PUSH_RECEVICE) {\n        if (payload) return Object.assign({}, state, { receive: [...state.receive, payload] })\n    } else if (type === common.action.FRIENDREQUEST_PUSH_SENT) {\n        if (payload) return Object.assign({}, state, { sent: [...state.sent, payload] })\n    } else if (type === common.action.FRIENDREQUEST_POP_RECEVICE) {\n        if (payload) {\n            let nstate = Object.assign({}, state);\n            let index = nstate.receive.findIndex(o => o._id === (payload as IFriendRequest)._id)\n            if (_.isNumber(index) && index !== -1) {\n                nstate.receive.splice(index, 1)\n                return nstate\n            }\n        }\n    } else if (type === common.action.FRIENDREQUEST_POP_SENT) {\n        if (payload) {\n            let nstate = Object.assign({}, state);\n            let index = nstate.sent.findIndex(o => o._id === (payload as IFriendRequest)._id)\n            if (_.isNumber(index) && index !== -1) {\n                nstate.sent.splice(index, 1)\n                return nstate\n            }\n        }\n    }\n    return state\n}","import common from \"../common\";\nimport { IChatroomReducerData } from \"../interface/DataInterface\";\n\nlet initializeState: IChatroomReducerData[] = []\n\nexport default function (state = initializeState, { type, payload }: { type: string, payload: any }) {\n    if (type === common.action.CHATROOM_CREATE) {\n        let data: IChatroomReducerData = payload;\n        if (state.every(o => o.chatroom._id !== data.chatroom._id))\n            return [payload, ...state]\n    } else if (type === common.action.CHATROOM_UPDATE) {\n        let nstate = [...state]\n        let data: IChatroomReducerData = payload;\n        let index = state.findIndex(o => o.chatroom._id === data.chatroom._id)\n        if (typeof index === 'number' && index !== -1) {\n            nstate.splice(index, 1, data)\n            return nstate.sort((a, b) => new Date(b.chatroom.updateTime).getTime() - new Date(a.chatroom.updateTime).getTime());\n        } else {\n            return [payload, ...nstate]\n        }\n    } else if (type === common.action.CHATROOM_UNFOLLOW) {\n        let nstate = [...state]\n        let data: IChatroomReducerData = payload;\n        let index = state.findIndex(o => o.chatroom._id === data.chatroom._id)\n        if (typeof index === 'number' && index !== -1) {\n            nstate.splice(index, 1)\n            return nstate;\n        } else if (data) {\n            return [data, ...nstate]\n        }\n    } else if (type === common.action.CHATROOM_INVITE) {\n\n    } else if (type === common.action.CHATROOM_GETALLUSERCHATROOMS) {\n        let nstate: IChatroomReducerData[] = [...payload, ...state];\n        let chatroomIds = Array.from(new Set(nstate.map(o => o.chatroom._id)));\n        let chatroomData = chatroomIds.map(chatroomId => nstate.find(oo => oo.chatroom._id === chatroomId))\n            .sort((a, b) => new Date((b?.chatroom?.updateTime) as string).getTime() - new Date((a?.chatroom?.updateTime) as string).getTime())\n        return chatroomData\n    }\n    return state;\n}","import common from \"../common\";\nimport { IMessageData } from \"../interface/DataInterface\";\n\nlet initializeState: { [key in string]: IMessageData[] } = {}\n\nexport default function (state = initializeState, { type, payload }: { type: string, payload: any }) {\n    if (type === common.action.MESSAGE_RECEIVE) {\n        let nstate = Object.assign({}, state);\n        let data: IMessageData = payload\n        // Create chatroom if chatroom undefined\n        nstate[data.chatroom] = nstate[data.chatroom] || []\n        // Push message\n        nstate[data.chatroom].unshift(data);\n        return nstate\n    } else if (type === common.action.MESSAGE_GET) {\n        let nstate = Object.assign({}, state);\n        let { chatroomId, messages }: { chatroomId: string, messages: IMessageData[] } = payload;\n        // Create chatroom if chatroom undefined\n        nstate[chatroomId] = nstate[chatroomId] || []\n        // Set messages\n        nstate[chatroomId] = messages.concat(nstate[chatroomId]);\n        // Set message\n        nstate[chatroomId] = nstate[chatroomId]\n            .filter((o, i) => nstate[chatroomId].findIndex(oo => oo._id === o._id) === i)\n            .sort((a, b) => new Date(b.createdTime).getTime() - new Date(a.createdTime).getTime())\n        return nstate;\n    }\n    return state;\n}","import common from \"../common\";\nimport { IFriendData } from \"../interface/DataInterface\";\n\nlet initializeState: { [key in string]: IFriendData[] } = {}\n\nexport default function (state = initializeState, { type, payload }: { type: string, payload: { chatroomId: string, typing: boolean, user: IFriendData } }) {\n    if (type === common.action.TYPING) {\n        // Variable\n        let { chatroomId, typing, user } = payload;\n        // Clone state\n        let nstate = Object.assign({}, state);\n        // Add typing data if not exist\n        nstate[chatroomId] = nstate[chatroomId] || []\n        let typingData = nstate[chatroomId];\n        // If typing is true ==> push else remove\n        if (typing) {\n            if (typingData.every(o => o._id !== user._id)) typingData.push(user);\n        } else {\n            let index = typingData.findIndex(o => o._id === user._id);\n            if (index !== -1) typingData.splice(index, 1);\n        }\n        return nstate;\n    }\n    return state;\n}","import { combineReducers } from \"redux\";\nimport UserReducer from \"./UserReducer\";\nimport AppReducer from \"./AppReducer\";\nimport NavigationReducer from \"./NavigationReducer\";\nimport FriendReducer from \"./FriendReducer\";\nimport FriendRequestReducer from \"./FriendRequestReducer\";\nimport ChatroomReducer from \"./ChatroomReducer\";\nimport MessageReducer from \"./MessageReducer\";\nimport TypingReducer from \"./TypingReducer\";\n\nconst reducer = combineReducers({\n    user: UserReducer,\n    app: AppReducer,\n    navigation: NavigationReducer,\n    friend: FriendReducer,\n    friendRequest: FriendRequestReducer,\n    chatroom: ChatroomReducer,\n    message: MessageReducer,\n    typing: TypingReducer,\n})\n\nexport default reducer;","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducer\";\n\nconst store = createStore(\n    reducer,\n    applyMiddleware(thunk)\n);\n\nstore.subscribe(()=>console.log('%cStore','color: #1e88e5',store.getState()))\n\nexport default store;","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    // debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React, { Suspense } from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./Store\";\nimport \"./css/bootstrap.min.css\"\nimport \"./css/font-awesome.min.css\"\nimport \"./css/style.css\"\nimport \"./i18n\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { futimesSync } from \"fs\";\n\nconsole.log = ()=>{}\n\nconst Context = () => (\n    <Suspense fallback=\"loading\">\n        <Provider store={store}>\n            <Router>\n                <App />\n            </Router>\n        </Provider>\n    </Suspense>\n)\n\nReactDom.render(<Context />, document.getElementById('root'))"],"sourceRoot":""}